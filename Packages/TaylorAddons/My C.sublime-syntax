%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: My C Syntax
file_extensions:
  - c
  - h
first_line_match: "-[*]-( Mode:)? C -[*]-"
scope: source.c

variables:
  identifier: '\b[[:alpha:]_][[:alnum:]_]*\b'
  control_keywords: 'break|case|continue|default|do|else|for|goto|if|_Pragma|return|switch|while|new|delete'
  basic_types: 'asm|__asm__|auto|bool|_Bool|char|_Complex|double|float|_Imaginary|int|long|short|signed|unsigned|void'
  before_tag: 'struct|union|enum'
  microsoft_types: '__int8|__int16|__int32|__int64'
  windows_types: 'APIENTRY|ATOM|BOOL|BOOLEAN|BYTE|CALLBACK|CCHAR|CHAR|COLORREF|CONST|DWORD|DWORDLONG|DWORD_PTR|DWORD32|DWORD64|FLOAT|HACCEL|HALF_PTR|HANDLE|HBITMAP|HBRUSH|HCOLORSPACE|HCONV|HCONVLIST|HCURSOR|HDC|HDDEDATA|HDESK|HDROP|HDWP|HENHMETAFILE|HFILE|HFONT|HGDIOBJ|HGLOBAL|HHOOK|HICON|HINSTANCE|HKEY|HKL|HLOCAL|HMENU|HMETAFILE|HMODULE|HMONITOR|HPALETTE|HPEN|HRESULT|HRGN|HRSRC|HSZ|HWINSTA|HWND|INT|INT_PTR|INT8|INT16|INT32|INT64|LANGID|LCID|LCTYPE|LGRPID|LONG|LONGLONG|LONG_PTR|LONG32|LONG64|LPARAM|LPBOOL|LPBYTE|LPCOLORREF|LPCSTR|LPCTSTR|LPCVOID|LPCWSTR|LPDWORD|LPHANDLE|LPINT|LPLONG|LPSTR|LPTSTR|LPVOID|LPWORD|LPWSTR|LRESULT|PBOOL|PBOOLEAN|PBYTE|PCHAR|PCSTR|PCTSTR|PCWSTR|PDWORD|PDWORDLONG|PDWORD_PTR|PDWORD32|PDWORD64|PFLOAT|PHALF_PTR|PHANDLE|PHKEY|PINT|PINT_PTR|PINT8|PINT16|PINT32|PINT64|PLCID|PLONG|PLONGLONG|PLONG_PTR|PLONG32|PLONG64|POINTER_32|POINTER_64|POINTER_SIGNED|POINTER_UNSIGNED|PSHORT|PSIZE_T|PSSIZE_T|PSTR|PTBYTE|PTCHAR|PTSTR|PUCHAR|PUHALF_PTR|PUINT|PUINT_PTR|PUINT8|PUINT16|PUINT32|PUINT64|PULONG|PULONGLONG|PULONG_PTR|PULONG32|PULONG64|PUSHORT|PVOID|PWCHAR|PWORD|PWSTR|QWORD|SC_HANDLE|SC_LOCK|SERVICE_STATUS_HANDLE|SHORT|SIZE_T|SSIZE_T|TBYTE|TCHAR|UCHAR|UHALF_PTR|UINT|UINT_PTR|UINT8|UINT16|UINT32|UINT64|ULONG|ULONGLONG|ULONG_PTR|ULONG32|ULONG64|UNICODE_STRING|USHORT|USN|VOID|WCHAR|WINAPI|WORD'
  stdint: 'u8|u16|u32|u64|i8|i16|i32|i64|r32|r64|bool32|flags8|int8|int16|int32|int64|uint8|uint16|uint32|uint64|real32|real64|byte|byte_t|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|int_least8_t|int_least16_t|int_least32_t|int_least64_t|uint_least8_t|uint_least16_t|uint_least32_t|uint_least64_t|int_fast8_t|int_fast16_t|int_fast32_t|int_fast64_t|uint_fast8_t|uint_fast16_t|uint_fast32_t|uint_fast64_t|intptr_t|uintptr_t|intmax_t|intmax_t|uintmax_t|uintmax_t'
  custom_types: 'AABB2_t|AABB3_t|AABBInfo_t|ALCchar|ALCcontext|ALCdevice|ALCenum|ALboolean|ALenum|ALfloat|ALsizei|ALuint|ActiveArea_t|Alignment_t|AllocateMemory_f|AllocationFunction_f|AnimAspect_t|AppClosing_f|AppData_t|AppFileChanged_f|AppGetStartupOptions_f|AppGetVersion_f|AppInitialize_f|AppInput_t|AppMemory_t|AppMenuChange_t|AppMenu_t|AppOutput_t|AppReloaded_f|AppResources_t|AppSettings_t|AppStateChange_t|AppState_t|AppUpdate_f|AppendFile_f|ArenaAllocMetaInfo_t|ArgType_t|Axis_t|BinDesignEntity_t|BinDesignHeaderOld_t|BinDesignHeader_t|BinDesignRoom_t|BinDesignTile_t|BinDiscoveredLevelInfo_t|BinDiscoveredRoomInfo_t|BinLevelHeader_t|BinLevelSaveHeader_t|BinSaveGameHeader_t|BinWorldLocation_t|BoundedStrList_t|BoxAnim_t|BtnTransFlag_t|BucketFillCallback_f|ButtonState_t|Buttons_t|CloseFile_f|ClosePlatformFont_f|ColorHSV_t|ColorPalette_t|ColorPicker_t|ColorState_t|Color_t|Colorf_t|CompareFunc_f|CompleteRelativePath_f|CompletionMenu_t|CopyFromClipboard_f|CopyToClipboard_f|Corner_t|CreateFolder_f|CreditsData_t|CursorType_t|CutAnimKeyType_t|CutAnimKey_t|CutEditorUndoState_t|CutImageFlags_t|CutImage_t|CutResourcePickerItem_t|CutResourcePicker_t|CutSelItem_t|CutSelKey_t|CutSequence_t|CutSequencerTrack_t|CutSequencer_t|CutToolbar_t|CutsceneData_t|CutsceneTool_t|DayOfWeek_t|DbgConsoleLine_t|DbgConsole_t|DbgFlags_t|DbgLevel_t|DebugOutput_f|DebugPrint_f|DeleteFile_f|DevMenuData_t|DiamondType_t|Dir2Diag_t|Dir2Ex_t|Dir2_t|Dir3_t|DiscoveredLevelInfo_t|DiscoveredRoomInfo_t|DisplayBtnShape_t|DisplayBtn_t|DisplayButtonPurpose_t|DllWatchingInfo_t|DoesFileExist_f|DoesFolderExist_f|DynArray_t|DynamicColor_t|EasingStyle_t|EditorData_t|EditorPreviewWindow_t|EditorTool_NumTools|EditorTool_t|EditorViewType_t|EditorView_t|EntityGroupType_t|EntityInfoMenuOption_t|EntityInfoMenu_t|EntityInfo_t|EntityLayer_t|EntityMetaInfoList_t|EntityMetaInfo_t|EntityMove_t|EntityOptionMetaInfo_t|EntityOptionValueMetaInfo_t|EntityPickCategoryListEntry_t|EntityPickCategoryList_t|EntityType_t|EntityVariantMetaInfo_t|Entity_t|ExpressionTerm_t|FILETIME|FileInfo_t|FontCharInfo_t|Font_t|FrameBuffer_t|FreeFileMemory_f|FreeFunction_f|FreeMemory_f|FrustumInfo_t|Frustum_t|FuncArg_t|FunctionTable_t|Function_t|GLFWcursor|GLFWgamepadstate|GLFWimage|GLFWmonitor|GLFWvidmode|GLFWwindow|GLenum|GLint|GLubyte|GLubyte|GLuint|GLvoid|GameBtn_t|GameColor_t|GameData_t|GameInstanceTime_t|GameInstance_t|GameRecordingEventType_t|GameRecordingEvent_t|GameRecordingFrame_t|GameRecording_t|GameState_t|GameView_t|GamepadButtons_t|GamepadState_t|GamepadTransFlag_t|GetAbsolutePath_f|GetFileInDirectory_f|GetNumFilesInDirectory_f|GetSpecialFolderPath_f|GifFrame_t|GifStream_t|GifferData_t|GlTexture_t|GlfwVersion_t|GrowingHeapHeader_t|GrowingHeapPageHeader_t|HeapAllocationHeader_t|HttpCallback_f|HttpRequestInProgress_f|HttpRequestStart_f|HttpRequestType_t|HttpRequest_t|InputEventType_t|InputEvent_t|InputMethod_t|InputPriority_t|IntroData_t|IsWatchingFile_f|KeyBinding_t|LPTHREAD_START_ROUTINE|Language_t|LaunchFile_f|LevelInfo_t|LevelPack_t|LevelSave_t|LevelType_t|Level_t|LightOptions_t|LinkHeader_t|LinkedList_t|LoadedApp_t|MainMenuData_t|MainMenuOptionType_t|MainMenuOption_t|MapAnim_t|Matrix4_t|MemoryArenaType_t|MemoryArena_t|MemoryArena_t|MemoryArena_t|MessData_t|MonitorDisplayMode_t|MonitorInfo_t|MonsterAiType_t|MonsterAnim_t|MonsterType_t|Month_t|MouseMode_t|MoveCause_t|MoveResult_t|MoveSpaceConnection_t|MoveSpaceData_t|MoveTaskItem_t|MoveTaskList_t|MoveTask_t|MultiData_t|MultiplayerTransInfo_t|NewsPageData_t|NewsPageLine_t|OBB2_t|OpenEmailPrompt_f|OpenFile_f|OpenFile_t|OpenPlatformFont_f|OpenglVersion_t|OptionType_t|PackList_t|PackPos_t|PackWindowLevelButton_t|PackWindowOption_t|PackWindow_t|PadBinding_t|PalColor_t|ParsingTokenType_t|ParsingToken_t|ParticleFlags_t|Particle_t|PetAnim_t|PickCategory_t|PickItem_t|PickMenuOption_t|PickMenuValueSelectorItem_t|PickMenuValueSelector_t|PickView_t|PickedColor_t|PlaceMode_t|PlainTextDesignHeader_t|PlatDebugLine_t|PlatformData_t|PlatformFont_t|PlatformInfo_t|PlatformType_t|PlaybackEventType_t|PlaybackEvent_t|PlaybackTime_t|PlayerAnim_t|PlayerInput_t|PlayerVariant_t|Player_t|PortalAnim_t|PressurePlateAnim_t|ProgressMenuData_t|ProgressMenuOptionType_t|ProgressMenuOption_t|ProgressTab_t|ProjectileAnim_t|Ray2_t|Ray3_t|RayvAABBResult_t|RcDebugInfo_t|ReadEntireFile_f|RealTime_t|Rectangle_t|Rectanglei_t|RenderContext_t|ResCharInfo_t|ResFont_t|ResMetaFileHeader_t|ResMetaFile_t|ResPaletteColor_t|ResPalette_t|ResShader_t|ResSheetFrameInfo_t|ResSound_t|ResSpriteSheet_t|ResSprite_t|ResType_t|ResolutionOption_t|ResolveIntersectResult_t|ResourceColors_t|ResourceFontOptions_t|ResourceType_t|RiffIterator_t|RoofVariant_t|RoomViewMode_t|Room_t|SYSTEMTIME|SampleBuffer_t|SaveGame_t|ScreenWipeSpinnerChoice_t|ScreenWipeStencil_t|ScreenWipeType_t|SettingType_t|SettingsBtnTag_t|SettingsButtonType_t|SettingsMenuButton_t|SettingsMenuData_t|SettingsSubMenu_t|Shader_t|ShowFile_f|ShowSourceFile_f|SoundInstance_t|SoundResourceList_t|SoundResource_t|SoundTransition_t|Sound_t|SpecialFolder_t|SpriteSheet_t|Sprite_t|SrlType_t|StartupInfo_t|StartupOptions_t|StrSplitPiece_t|TempArenaHeader_t|TempListItem_t|TempList_t|TextBox_t|TextLocation_t|TextParser_t|Texture_t|TileDrawOptions_t|TileType_t|Tile_t|TimeUnit_t|TransInfoType_t|Transform2_t|Transform3_t|UnwatchFile_f|UpdateLoadingBar_f|UpdatePass_t|Vec2_t|Vec2i_t|Vec3_t|Vec3i_t|Vec4_t|Vec4i_t|Version_t|VertexBuffer_t|Vertex_t|WAV_Chunk_t|WAV_FormatChunk_t|WAV_Header_t|WIN32_FIND_DATA|WallPlaceType_t|WatchFile_f|WatchFilesInfo_t|WatchedFile_t|Win32Allocation_t|Win32Mutex_t|Win32ThreadFunction_t|Win32Thread_t|Win32_Shader_t|Win32_Texture_t|Win32_VertexBuffer_t|Win32_Vertex_t|WorldLocation_t|WriteEntireFile_f|mat4|obb2|rec|reci|stbtt_bakedchar|timeval|v2|v2i|v3|v3i|v4|v4i|va_list'
  custom_constants: '0|1|10|11|12|13|14|15|16|17|18|19|2|20|21|22|23|24|25|26|27|28|29|3|30|31|32|33|34|35|36|37|38|39|4|40|41|42|43|44|45|46|47|48|49|49|49|49|49|49|49|49|49|49|49|49|49|49|49|49|49|49|49|49|49|49|49|49|49|49|49|49|49|49|49|49|49|49|49|49|5|6|7|8|9|ADD_LEVELS_MESSAGE_DISPLAY_TIME|ALC_DEVICE_SPECIFIER|ALL_DEBUG_OUTPUT_ENABLED|AL_BUFFER|AL_FALSE|AL_FORMAT_MONO16|AL_FORMAT_MONO32|AL_FORMAT_STEREO16|AL_FORMAT_STEREO32|AL_GAIN|AL_LOOPING|AL_NO_ERROR|AL_ORIENTATION|AL_PITCH|AL_PLAYING|AL_POSITION|AL_SOURCE_STATE|AL_TRUE|AL_VELOCITY|APPLICATION_DLL_NAME|APPLICATION_DLL_TEMP_NAME|APPROX_GIF_OVERHEAD|APP_VERSION_BUILD|APP_VERSION_MAJOR|APP_VERSION_MINOR|ASSERTIONS_ACTIVE|ATTR_PACKED|AUDIO_ENABLED|AUDIO_FADE_DISTANCE|ActiveArea_Chunk|ActiveArea_Level|ActiveArea_NumOptions|ActiveArea_Region|ActiveArea_Room|Alignment_Center|Alignment_Left|Alignment_Right|AnimAspect_Color|AnimAspect_Depth|AnimAspect_Flags|AnimAspect_Frame|AnimAspect_NumAspects|AnimAspect_Position|AnimAspect_ReplaceColor1|AnimAspect_ReplaceColor2|AnimAspect_ReplaceColor3|AnimAspect_ReplaceColor4|AnimAspect_Rotation|AnimAspect_Scale|AnimationVariant_CrackBreak|AnimationVariant_DirtCrumble|AnimationVariant_IceCrackBreak|AnimationVariant_IceDissolve|AnimationVariant_LavaSplash|AnimationVariant_NumVariants|AnimationVariant_ResetterPlayerNeeded|AnimationVariant_SlimeDissolve|AnimationVariant_SlimeWeb|AnimationVariant_WaterSplash|AppMenu_NewsPage|AppMenu_None|AppMenu_NumMenus|AppMenu_Settings|AppStateChangeType_Change|AppStateChangeType_Pop|AppStateChangeType_Push|AppState_Credits|AppState_Cutscene|AppState_DevMenu|AppState_Editor|AppState_Game|AppState_Giffer|AppState_Intro|AppState_MainMenu|AppState_Mess|AppState_Multiplayer|AppState_None|AppState_Notification|AppState_NumStates|AppState_ProgressMenu|ArgType_Bool|ArgType_BoolPntr|ArgType_Char|ArgType_CharPntr|ArgType_I16|ArgType_I16Pntr|ArgType_I32|ArgType_I32Pntr|ArgType_I64|ArgType_I64Pntr|ArgType_I8|ArgType_I8Pntr|ArgType_Other|ArgType_R32|ArgType_R32Pntr|ArgType_R64|ArgType_R64Pntr|ArgType_U16|ArgType_U16Pntr|ArgType_U32|ArgType_U32Pntr|ArgType_U64|ArgType_U64Pntr|ArgType_U8|ArgType_U8Pntr|ArgType_Void|ArgType_VoidPntr|Axis_None|Axis_W|Axis_X|Axis_Y|Axis_Z|BAT_COLOR_DARK|BAT_COLOR_EYES|BAT_COLOR_PRIMARY|BAT_COLOR_SECONDARY|BIN_DESIGN_TITLE|BIN_DESIGN_TITLE_LENGTH|BIN_DESIGN_VERS_MAJOR|BIN_DESIGN_VERS_MAJOR_OLD|BIN_DESIGN_VERS_MINOR|BIN_DESIGN_VERS_MINOR_OLD|BIN_LEVEL_TITLE|BIN_LEVEL_TITLE_LENGTH|BIN_LEVEL_VERS_MAJOR|BIN_LEVEL_VERS_MINOR|BIN_SAVE_GAME_TITLE|BIN_SAVE_GAME_TITLE_LENGTH|BIN_SAVE_GAME_VERS_MAJOR|BIN_SAVE_GAME_VERS_MINOR|BOMB_EXPLOSION_SIZE|BagVariant_Normal|BagVariant_NumVariants|BagVariant_Sheep|Black|BoxAnim_Breaking|BoxAnim_Burning|BoxAnim_Falling|BoxAnim_Idle|BoxAnim_LavaSplashing|BoxAnim_Lit|BoxAnim_Moving|BoxAnim_WaterSplashing|BoxVariant_Ice|BoxVariant_Metal|BoxVariant_NumVariants|BoxVariant_Slime|BoxVariant_Tetris|BoxVariant_Void|BoxVariant_Wood|BtnTransFlag_Alt|BtnTransFlag_CapsLock|BtnTransFlag_Char|BtnTransFlag_Ctrl|BtnTransFlag_Modifiers|BtnTransFlag_Pressed|BtnTransFlag_Repeat|BtnTransFlag_Shift|BtnTransFlag_Super|BushVariant_Barrel|BushVariant_Boulder|BushVariant_Box|BushVariant_Default|BushVariant_NumVariants|Button_0|Button_1|Button_2|Button_3|Button_4|Button_5|Button_6|Button_7|Button_8|Button_9|Button_A|Button_Alt|Button_B|Button_Backspace|Button_C|Button_CapsLock|Button_CloseBracket|Button_Colon|Button_Comma|Button_Control|Button_D|Button_Delete|Button_Down|Button_E|Button_End|Button_Enter|Button_Escape|Button_F|Button_F1|Button_F10|Button_F11|Button_F12|Button_F2|Button_F3|Button_F4|Button_F5|Button_F6|Button_F7|Button_F8|Button_F9|Button_G|Button_H|Button_Home|Button_I|Button_Insert|Button_J|Button_K|Button_L|Button_Left|Button_M|Button_Minus|Button_N|Button_Num0|Button_Num1|Button_Num2|Button_Num3|Button_Num4|Button_Num5|Button_Num6|Button_Num7|Button_Num8|Button_Num9|Button_NumAdd|Button_NumDivide|Button_NumLock|Button_NumMultiply|Button_NumPeriod|Button_NumSubtract|Button_O|Button_OpenBracket|Button_P|Button_PageDown|Button_PageUp|Button_Period|Button_Pipe|Button_Plus|Button_Q|Button_QuestionMark|Button_Quote|Button_R|Button_Right|Button_S|Button_Shift|Button_Space|Button_T|Button_Tab|Button_Tilde|Button_U|Button_Up|Button_V|Button_W|Button_X|Button_Y|Button_Z|Buttons_NumButtons|CARPET_COLOR_DESIGN|CARPET_COLOR_PRIMARY|CARPET_COLOR_TRIM_DARK|CARPET_COLOR_TRIM_LIGHT|CASTLE_DIAMOND_CNT_DELAY|CASTLE_DIAMOND_CNT_POST_DELAY|CASTLE_DIAMOND_PRICE|CHAR_CHECK|CHAR_DIAMOND|CHEST_OPEN_TIME|COMPLETE_MENU_CLOSE_TIME|COMPLETE_MENU_OPEN_TIME|COMPLETION_ACED_ANIM_TIME|COMPLETION_COUNTERS_COUNT_SPEED|COMPLETION_COUNTERS_DELAY|COMPLETION_SCROLL_WHEEL_SPEED|COMPLETION_TRANSITION_TIME|COMPLETION_VIEWPORT_SCROLL_LAG|CRASH_DUMP_ASSERTS|CRYSTAL_BALL_CLOSE_TIME|CRYSTAL_BALL_OPEN_TIME|CRYSTAL_BALL_VIEW_DEPTH|CSIDL_APPDATA|CSIDL_MYPICTURES|CSL_CLOSE_TIME|CSL_DEFAULT_LINE_WRAP|CSL_DEFAULT_SHOW_FILE_NAMES|CSL_DEFAULT_SHOW_FUNCTION_NAMES|CSL_DEFAULT_SHOW_GUTTER_NUMS|CSL_DEFAULT_SHOW_LINE_NUMBERS|CSL_FIFO_SPACE_SIZE|CSL_FILE_NAME_FONT|CSL_FILE_NAME_FONT_SIZE|CSL_FONT|CSL_FONT_SIZE|CSL_FUNC_NAME_FONT|CSL_FUNC_NAME_FONT_SIZE|CSL_GUTTER_NUM_FONT|CSL_GUTTER_NUM_FONT_SIZE|CSL_INPUT_BOX_MAX_CHARS|CSL_LINE_NUM_FONT|CSL_LINE_NUM_FONT_SIZE|CSL_LINE_SPACING|CSL_MAX_PREV_COMMADS_RECALL|CSL_MIN_SCROLLBAR_HEIGHT|CSL_OPEN_TIME|CSL_SCROLL_BAR_WIDTH|CUTSCENE_TITLE_MAX_LENGTH|CUT_CP_CUSTOM_PADDING|CUT_CP_FONT_SIZE|CUT_CP_HUE_SLIDER_WIDTH|CUT_CP_PAL_COLOR_FONT_SIZE|CUT_CP_PAL_COLOR_NAME_SPLIT|CUT_CP_PAL_COLOR_PADDING|CUT_CP_SCROLL_LAG|CUT_CP_SCROLL_WHEEL_SPEED|CUT_CP_SUB_INDEX_FONT_SIZE|CUT_CP_TEXTBOX_PADDING_X|CUT_CP_TEXTBOX_PADDING_Y|CUT_CP_TITLE_PADDING|CUT_CP_WINDOW_HEIGHT|CUT_CP_WINDOW_WIDTH|CUT_CROPPED_COLOR|CUT_ED_BACKGROUND_COLOR|CUT_ED_DEFAULT_ZOOM|CUT_ED_DRAG_BREAK_DIST|CUT_ED_GRID_SIZE|CUT_ED_MAX_NUM_UNDOS|CUT_ED_MAX_ZOOM|CUT_ED_MIN_GRAB_THICKNESS|CUT_ED_SCALE_SPEED|CUT_ED_SNAP_ANGLE|CUT_ED_SNAP_GRID_SIZE|CUT_ED_TOOL_DECOR_ICON_SCALE|CUT_ED_VIEWPORT_FONT_SIZE|CUT_ED_ZOOM_DISPLAY_TIME|CUT_ED_ZOOM_FONT_SIZE|CUT_NEW_IMAGE_BTN_MARGIN|CUT_NEW_IMAGE_BTN_SIZE|CUT_RP_BTN_PADDING|CUT_RP_CLOSE_TIME|CUT_RP_FONT_SIZE|CUT_RP_ITEM_FONT_SIZE|CUT_RP_ITEM_MARGIN|CUT_RP_ITEM_MAX_WIDTH|CUT_RP_ITEM_PADDING|CUT_RP_MIN_NUM_COLUMNS|CUT_RP_OPEN_TIME|CUT_RP_OPEN_TIME|CUT_RP_SCROLL_LAG|CUT_RP_SCROLL_SNAP_DIST|CUT_RP_SCROLL_SPEED|CUT_RP_VIEW_SCROLL_PADDING|CUT_RP_WINDOW_MARGIN|CUT_RP_WINDOW_PADDING|CUT_SLOW_PLAY_SPEED|CUT_SQ_CLOSE_TIME|CUT_SQ_CONTROLS_ICON_SCALE|CUT_SQ_CONTROLS_MARGIN|CUT_SQ_CURSOR_FONT_SCALE|CUT_SQ_DURATION_BOX_MARGIN|CUT_SQ_DURATION_BOX_PADDING|CUT_SQ_DURATION_BOX_SIZE|CUT_SQ_FONT_SCALE|CUT_SQ_KEY_MOVE_MIN|CUT_SQ_MAX_ZOOM|CUT_SQ_OPEN_BTN_ICON_SCALE|CUT_SQ_OPEN_BTN_MARGIN|CUT_SQ_OPEN_BTN_PADDING|CUT_SQ_OPEN_TIME|CUT_SQ_SCROLL_PADDING|CUT_SQ_SCROLL_SPEED|CUT_SQ_SCROLL_SPEED_VERT|CUT_SQ_SECOND_TICK_HEIGHT|CUT_SQ_TICK_FONT_SCALE|CUT_SQ_TRACK_FONT_SIZE|CUT_SQ_TRACK_ICON_SCALE|CUT_SQ_TRACK_MARGIN|CUT_SQ_TRACK_PADDING|CUT_SQ_VIEW_LAG|CUT_SQ_VIEW_PADDING|CUT_SQ_ZOOM_LAG|CUT_TB_COLOR_TOOL_BTN_SIZE|CUT_TB_COPY_FONT_SCALE|CUT_TB_COPY_ICON_SCALE|CUT_TB_FONT_SIZE|CUT_TB_ICON_PADDING|CUT_TB_ICON_SCALE|CUT_TB_MARGIN|CUT_TB_PANEL_FONT_SIZE|CUT_TB_PANEL_PADDING|CandleTriggerType_None|CandleTriggerType_NumTypes|CandleTriggerType_OnBoth|CandleTriggerType_OnExtinguish|CandleTriggerType_OnLight|CandleVariant_Candelabra|CandleVariant_Default|CandleVariant_Fancy|CandleVariant_Lantern1|CandleVariant_NumVariants|CandleVariant_Small|CarpetVariant_EdgedPattern1|CarpetVariant_EdgedPattern2|CarpetVariant_EdgedPattern3|CarpetVariant_EdgedPattern4|CarpetVariant_EdgedPattern5|CarpetVariant_EdgedPattern6|CarpetVariant_EdgedPattern7|CarpetVariant_NumVariants|CarpetVariant_Pattern1|CarpetVariant_Pattern2|CarpetVariant_Pattern3|CarpetVariant_Pattern4|CarpetVariant_Pattern5|CarpetVariant_Pattern6|CarpetVariant_Pattern7|ChestTrapTriggerType_None|ChestTrapTriggerType_NumTypes|ChestTrapTriggerType_OnHidden|ChestTrapTriggerType_OnItemCollect|ChestTrapTriggerType_OnOpened|ChestTrapTriggerType_OnOpening|ChestTrapTriggerType_OnShown|ChestTriggerType_Hide|ChestTriggerType_None|ChestTriggerType_NumTypes|ChestTriggerType_Show|ChestTriggerType_Toggle|ChestVariant_Crystal|ChestVariant_Default|ChestVariant_NumVariants|ChestVariant_Spikes|ChestVariant_Wooden|ColorState_Active|ColorState_ActiveHover|ColorState_Hover|ColorState_Idle|ColorState_Pressed|Color_AliceBlue|Color_AntiqueWhite|Color_Aquamarine|Color_Azure|Color_Banana|Color_Beet|Color_Beige|Color_Bisque|Color_Black|Color_BlancheDalmond|Color_Blue|Color_BlueViolet|Color_Brick|Color_Brown|Color_BurlyWood|Color_BurnTumber|Color_BurntSienna|Color_CadetBlue|Color_CadmiumOrange|Color_CadmiumYellow|Color_Carrot|Color_Chartreuse|Color_Chocolate|Color_Cobalt|Color_CobaltGreen|Color_ColdGrey|Color_Coral|Color_CornSilk|Color_CornflowerBlue|Color_Crimson|Color_Cyan|Color_DarkCyan|Color_DarkGoldenRod|Color_DarkGray|Color_DarkGreen|Color_DarkKhaki|Color_DarkOliveGreen|Color_DarkOrange|Color_DarkOrchid|Color_DarkRed|Color_DarkSalmon|Color_DarkSeaGreen|Color_DarkSlateBlue|Color_DarkSlateGray|Color_DarkTurquoise|Color_DarkViolet|Color_DeepPink|Color_DeepSkyBlue|Color_DimGray|Color_DodgerBlue|Color_EggShell|Color_EmeraldGreen|Color_FireBrick|Color_Flesh|Color_FloralWhite|Color_ForestGreen|Color_Gainsboro|Color_GhostWhite|Color_Gold|Color_GoldenRod|Color_Gray|Color_Green|Color_GreenYellow|Color_HalfTransparent|Color_HalfTransparentBlack|Color_Honeydew|Color_HotPink|Color_IndianRed|Color_Indigo|Color_Ivory|Color_IvoryBlack|Color_Khaki|Color_Lavender|Color_LawnGreen|Color_LemonChiffon|Color_LightBlue|Color_LightCoral|Color_LightCyan|Color_LightGoldenRod|Color_LightGreen|Color_LightGrey|Color_LightPink|Color_LightSalmon|Color_LightSeaGreen|Color_LightSkyBlue|Color_LightSlateBlue|Color_LightSlateGray|Color_LightSteelBlue|Color_LightYellow|Color_Lime|Color_LimeGreen|Color_Linen|Color_Magenta|Color_ManganeseBlue|Color_Maroon|Color_MediumOrchid|Color_MediumPurple|Color_MediumSeaGreen|Color_MediumSlateBlue|Color_MediumSpringGreen|Color_MediumTurquoise|Color_MediumVioletRed|Color_Melon|Color_MidnightBlue|Color_Mint|Color_MintCream|Color_MistyRose|Color_Moccasin|Color_NavajoWhite|Color_Navy|Color_OldLace|Color_Olive|Color_OliveDrab|Color_Orange|Color_OrangeRed|Color_Orchid|Color_PaleGoldenRod|Color_PaleGreen|Color_PaleTurquoise|Color_PaleVioletRed|Color_PapayaWhip|Color_PeachPuff|Color_Peacock|Color_Peru|Color_Pink|Color_Plum|Color_PowderBlue|Color_Purple|Color_Raspberry|Color_RawSienna|Color_Red|Color_RosyBrown|Color_RoyalBlue|Color_SaddleBrown|Color_Salmon|Color_SandyBrown|Color_SapGreen|Color_SeaGreen|Color_Seashell|Color_Sepia|Color_Sienna|Color_Silver|Color_SkyBlue|Color_SlateBlue|Color_SlateGray|Color_Snow|Color_SpringGreen|Color_SteelBlue|Color_Sunlight|Color_Tan|Color_Teal|Color_Thistle|Color_Tomato|Color_TransparentBlack|Color_TransparentWhite|Color_Turquoise|Color_TurquoiseBlue|Color_Violet|Color_VioletRed|Color_WarmGrey|Color_Wheat|Color_White|Color_WhiteSmoke|Color_Yellow|Color_YellowGreen|ComparatorVariant_Equal|ComparatorVariant_GreaterThan|ComparatorVariant_GreaterThanOrEqual|ComparatorVariant_IsFalse|ComparatorVariant_IsTrue|ComparatorVariant_LessThan|ComparatorVariant_LessThanOrEqual|ComparatorVariant_NotEqual|ComparatorVariant_NumVariants|ComparatorVariant_OnDecrement|ComparatorVariant_OnIncrement|Corner_All|Corner_BottomLeft|Corner_BottomRight|Corner_None|Corner_NumCorners|Corner_TopLeft|Corner_TopRight|CountType_CountEntities|CountType_DecrementOnTrigger|CountType_IncrementOnTrigger|CountType_None|CountType_NumTypes|Credit_Department_Font_Size|Credit_Name_Font_Size|Credit_Title_Font_Size|CritterVariant_Mouse|CritterVariant_NumVariants|CritterVariant_Snake|CritterVariant_Spider|CrystalBallTriggerType_None|CrystalBallTriggerType_NumTypes|CrystalBallTriggerType_OnBoth|CrystalBallTriggerType_OnLookAt|CrystalBallTriggerType_OnLookAway|CrystalBallTriggerType_OnLookConstant|CrystalCameraOffset_Down|CrystalCameraOffset_DownRight|CrystalCameraOffset_None|CrystalCameraOffset_NumOptions|CrystalCameraOffset_Right|Cursor_Default|Cursor_NumTypes|Cursor_Pointer|Cursor_ResizeHorizontal|Cursor_ResizeVertical|Cursor_Text|CutAnimKeyType_ImageAspect|CutAnimKeyType_None|CutAnimKeyType_NumTypes|CutAnimKeyType_ParticleEffects|CutAnimKeyType_SongQueue|CutAnimKeyType_SoundEffect|CutAnimKeyType_Transition|CutAnimKeyType_ViewPosition|CutImageFlag_FlipX|CutImageFlag_FlipY|CutImageFlag_Locked|CutImageFlag_Visible|CutsceneTool_Color|CutsceneTool_Lock|CutsceneTool_NumTools|CutsceneTool_Rotate|CutsceneTool_Scale|CutsceneTool_Select|CutsceneTool_Translate|CutsceneTool_Viewport|DAYS_PER_4YEARS|DEBUG|DEBUG_OUTPUT_ENABLED|DEBUG_RESOLVE_PASS_HISTORY_NUM_ITEMS|DEFAULT_LEVEL_RENDER_PATH|DEFAULT_VIEW_MODE|DEF_MUSIC_TRANS_TIME|DEPTH_EPSILON|DESATURATED_DRAWING|DESATURATION_AMOUNT|DESATURATION_ROOF_AMOUNT|DEVELOPER|DIAMOND_COLOR_DARK|DIAMOND_COLOR_LIGHT|DIAMOND_COLOR_PRIMARY|DIAMOND_COLOR_SECONDARY|DIAMOND_LOC_ALLOC_SIZE|DIRT_CRUMBLE_TIME|DISCOVERED_LEVEL_ALLOC_SIZE|DISRUPTOR_WALK_THROUGH_ANIM_TIME|DM_VIEW_FOLLOW_LAG|DM_VIEW_MOVE_SPEED|DM_VIEW_MOVE_SPEED_FAST|DayOfWeek_Friday|DayOfWeek_Monday|DayOfWeek_Saturday|DayOfWeek_Sunday|DayOfWeek_Thursday|DayOfWeek_Tuesday|DayOfWeek_Wednesday|DbgFlag_Inverted|DbgFlag_PlatformLayer|DbgFlag_UserInput|DbgFlags_None|DbgLevel_Debug|DbgLevel_Error|DbgLevel_Info|DbgLevel_None|DbgLevel_Notify|DbgLevel_Other|DbgLevel_Regular|DbgLevel_Warning|DeathTimerTriggerType_None|DeathTimerTriggerType_NumTypes|DeathTimerTriggerType_Start|DeathTimerTriggerType_Stop|DeathTimerTriggerType_Toggle|DeathType_Drowning|DeathType_Exploding|DeathType_Falling|DeathType_Lava|DeathType_NumTypes|DeathType_Suicide|DeathType_Zombie|DiamondType_All|DiamondType_BlueDiamonds|DiamondType_GoldBars|DiamondType_NumTypes|DiamondType_RedDiamonds|DiamondVariant_Default|DiamondVariant_GoldBar|DiamondVariant_NumVariants|DiamondVariant_Red|Dir2Diag_Down|Dir2Diag_DownLeft|Dir2Diag_DownRight|Dir2Diag_Left|Dir2Diag_LeftDown|Dir2Diag_LeftUp|Dir2Diag_None|Dir2Diag_NumOptions|Dir2Diag_PolarityBit|Dir2Diag_Right|Dir2Diag_RightDown|Dir2Diag_RightUp|Dir2Diag_Up|Dir2Diag_UpLeft|Dir2Diag_UpRight|Dir2Ex_BottomLeft|Dir2Ex_BottomRight|Dir2Ex_TopLeft|Dir2Ex_TopRight|Dir2_All|Dir2_Down|Dir2_Left|Dir2_None|Dir2_Right|Dir2_Up|Dir3_All|Dir3_Backward|Dir3_Down|Dir3_Forward|Dir3_Left|Dir3_None|Dir3_Right|Dir3_Up|DisplayBtnShape_AnalogStick|DisplayBtnShape_Circle|DisplayBtnShape_Rectangle|DisplayBtnShape_Texture|DisplayButtonPurpose_Default|DisplayButtonPurpose_Negative|DisplayButtonPurpose_Positive|DisplayButtonPurpose_Subtle|DisruptorTriggerType_Disable|DisruptorTriggerType_Enable|DisruptorTriggerType_None|DisruptorTriggerType_NumTypes|DisruptorTriggerType_Toggle|EDITOR_README_FILE_PATH|ED_DEFAULT_VIEW_ZOOM|ED_FILEPATH_FONT_SIZE|ED_MAX_ZOOM|ED_MIN_ZOOM|ED_OPT_BITWISE_FONT_SIZE|ED_OPT_BITWISE_ICON_SCALE|ED_OPT_BITWISE_PADDING_X|ED_OPT_BITWISE_PADDING_Y|ED_OPT_BOOL_ICON_SCALE|ED_OPT_DIR2_BTN_SCALE|ED_OPT_DIR2_FONT_SCALE|ED_OPT_DIR2_ICON_SCALE|ED_OPT_GAMECOLOR_BTN_SIZE|ED_OPT_GAMECOLOR_PADDING|ED_OPT_GENERIC_FONT_SIZE|ED_OPT_GENERIC_ICON_SCALE|ED_OPT_ICONS_FONT_SIZE|ED_OPT_ICONS_ICON_SCALE|ED_OPT_ICONS_PADDING|ED_OPT_INT_FONT_SCALE|ED_OPT_INT_ICON_SCALE|ED_OPT_SIDES_ICON_SCALE|ED_OPT_SIDES_PADDING|ED_OP_FONT_SIZE|ED_PICK_MENU_CLOSE_TIME|ED_PICK_MENU_HEADER_FONT_SIZE|ED_PICK_MENU_HEADER_PADDING|ED_PICK_MENU_OPEN_TIME|ED_PREVIEW_FONT_SIZE|ED_PREVIEW_SPECIAL_PADDING|ED_PREVIEW_TITLE_FONT_SIZE|ED_SELECTOR_BORDER_THICKNESS|ED_SELECTOR_CLOSE_TIME|ED_SELECTOR_FONT_SIZE|ED_SELECTOR_ITEM_PADDING|ED_SELECTOR_OPEN_TIME|ED_SELECTOR_SCROLL_LAG|ED_SELECTOR_SCROLL_SPEED|ED_START_FONT_SIZE|ED_TOOL_ICON_MARGIN|ED_TOOL_ICON_SCALE|ED_UNDO_HISTORY_LENGTH|END_PACK|ENTITY_ALLOC_SIZE|ENTITY_BASE_DEPTH|ENTITY_DEPTH_RANGE|ERROR_OUTPUT_ENABLED|EXPLOSION_ANIM_SPEED|EasingStyle_BackIn|EasingStyle_BackInOut|EasingStyle_BackOut|EasingStyle_BounceIn|EasingStyle_BounceInOut|EasingStyle_BounceOut|EasingStyle_CircularIn|EasingStyle_CircularInOut|EasingStyle_CircularOut|EasingStyle_Count|EasingStyle_CubicIn|EasingStyle_CubicInOut|EasingStyle_CubicOut|EasingStyle_ElasticIn|EasingStyle_ElasticInOut|EasingStyle_ElasticOut|EasingStyle_ExponentialIn|EasingStyle_ExponentialInOut|EasingStyle_ExponentialOut|EasingStyle_Linear|EasingStyle_None|EasingStyle_NumStyles|EasingStyle_QuadraticIn|EasingStyle_QuadraticInOut|EasingStyle_QuadraticOut|EasingStyle_QuarticIn|EasingStyle_QuarticInOut|EasingStyle_QuarticOut|EasingStyle_QuinticIn|EasingStyle_QuinticInOut|EasingStyle_QuinticOut|EasingStyle_SineIn|EasingStyle_SineInOut|EasingStyle_SineOut|EditorTool_Bucket|EditorTool_ChunkPlacer|EditorTool_NumTools|EditorTool_Painter|EditorTool_Placer|EditorTool_Rectangle|EditorTool_Selection|EditorViewType_Default|EditorViewType_EntityCount|EditorViewType_GroupNumbers|EditorViewType_NumViewTypes|EntityGroupType_None|EntityGroupType_NumTypes|EntityGroupType_Receiver|EntityGroupType_Trigger|EntityLayer_Default|EntityLayer_NumLayers|EntityLayer_Tall|EntityLayer_Top|EntityLayer_Transparent|Entity_Animation|Entity_Bag|Entity_Barrel|Entity_Bat|Entity_Boulder|Entity_Box|Entity_Bunny|Entity_Bush|Entity_Candle|Entity_Chest|Entity_ChestTrap|Entity_ChunkChangeTrigger|Entity_Comparator|Entity_Critter|Entity_CrystalBall|Entity_CrystalCamera|Entity_DeathTimer|Entity_Diamond|Entity_DiamondDoor|Entity_Disruptor|Entity_Door|Entity_EntityCounter|Entity_Exit|Entity_Explosion|Entity_FireStand|Entity_FireTrap|Entity_FragileDecoration|Entity_FriendshipDoor|Entity_FriendshipEnabler|Entity_FriendshipPad|Entity_Ghost|Entity_Giver|Entity_Gloves|Entity_GlyphGroup1|Entity_GlyphGroup2|Entity_GlyphGroup3|Entity_GlyphGroup4|Entity_Goblin|Entity_HiddenPath|Entity_HitSwitch|Entity_Key|Entity_Lever|Entity_Light|Entity_LightPad|Entity_LitDoor|Entity_Lockbox|Entity_MonsterDoor|Entity_MonsterTrigger|Entity_Moth|Entity_Mouse|Entity_Number|Entity_Operator|Entity_OverheadDecor|Entity_PathStones|Entity_Peach|Entity_Penguin|Entity_Pet|Entity_Piston|Entity_PistonArm|Entity_Player|Entity_PlayerSeparator|Entity_PlayerTeleport|Entity_Portal|Entity_Powerup|Entity_PressurePlate|Entity_PreviewCamera|Entity_Projectile|Entity_Pusher|Entity_Rail|Entity_RainCloud|Entity_Region|Entity_Resetter|Entity_RespawnZone|Entity_Robot|Entity_RoomCanceller|Entity_Rotator|Entity_SaveSpot|Entity_Saver|Entity_Sensor|Entity_Shoes|Entity_Skeleton|Entity_SolidDecoration|Entity_Spawner|Entity_Spider|Entity_SpikeTrap|Entity_SwordPedestal|Entity_Table|Entity_TableDecoration|Entity_Taker|Entity_Teleporter|Entity_TetrisDoor|Entity_Text|Entity_Threshold|Entity_Timer|Entity_ToggleWall|Entity_Torch|Entity_TurnTrigger|Entity_Turret|Entity_WallButton|ExitType_Custom|ExitType_LastLevel|ExitType_MainHub|ExitType_NextLevel|ExitType_NumOptions|ExitType_ReturnToDungeon|ExitVariant_Arrow|ExitVariant_Colors|ExitVariant_Dark|ExitVariant_Door|ExitVariant_Ladder|ExitVariant_Light|ExitVariant_NumVariants|ExitVariant_Stairs|ExitVariant_Teleporter|ExitVariant_TrapLadder|ExitVariant_TrapStairs|FONTS_FLDR|FRAMERATE_GRAPH_WIDTH|FRAMERATE_VERT_TICK_VAL|FRIENDSHIP_DOOR_OPEN_TIME|FireStandTriggerType_Light|FireStandTriggerType_None|FireStandTriggerType_NumTypes|FireStandTriggerType_Toggle|FireStandTriggerType_Unlight|FireTrapTriggerType_Activate|FireTrapTriggerType_Deactivate|FireTrapTriggerType_None|FireTrapTriggerType_NumTypes|FireTrapTriggerType_Toggle|FragileDecor_AnimalSkull|FragileDecor_Arrow|FragileDecor_Bamboo|FragileDecor_Brambles1|FragileDecor_Brambles2|FragileDecor_Brambles3|FragileDecor_Brambles4|FragileDecor_BrokenShield|FragileDecor_BrokenSword|FragileDecor_Bunch|FragileDecor_Clippings1|FragileDecor_Clippings2|FragileDecor_Clippings3|FragileDecor_DirtMound|FragileDecor_DrySapling1|FragileDecor_DrySapling2|FragileDecor_Flower2|FragileDecor_Flower3|FragileDecor_Flower4|FragileDecor_GenieLamp|FragileDecor_GlassCover1|FragileDecor_GlassCover2|FragileDecor_Grass|FragileDecor_Grate|FragileDecor_Hatch|FragileDecor_LargeLeaf|FragileDecor_Leafs1|FragileDecor_Leafs2|FragileDecor_Leafs3|FragileDecor_Leafs4|FragileDecor_Leafs5|FragileDecor_Leafs6|FragileDecor_Leafs7|FragileDecor_Leaves|FragileDecor_LilyPad|FragileDecor_Manhole|FragileDecor_MediumMushroom1|FragileDecor_MediumMushroom2|FragileDecor_Mushrooms1|FragileDecor_NumVariants|FragileDecor_Pebbles|FragileDecor_Plant1|FragileDecor_Plant2|FragileDecor_Puddle1|FragileDecor_Puddle10|FragileDecor_Puddle2|FragileDecor_Puddle3|FragileDecor_Puddle4|FragileDecor_Puddle5|FragileDecor_Puddle6|FragileDecor_Puddle7|FragileDecor_Puddle8|FragileDecor_Puddle9|FragileDecor_Reeds1|FragileDecor_Reeds2|FragileDecor_Reeds3|FragileDecor_Reeds4|FragileDecor_Rocks|FragileDecor_Rocks2|FragileDecor_Rocks3|FragileDecor_Rocks4|FragileDecor_Roots1|FragileDecor_Roots2|FragileDecor_Roots3|FragileDecor_Skull|FragileDecor_Slush1|FragileDecor_Slush2|FragileDecor_SmallCandles1|FragileDecor_SmallCandles2|FragileDecor_SmallCandles3|FragileDecor_SmallMushrooms1|FragileDecor_SmallMushrooms2|FragileDecor_SmallMushrooms3|FragileDecor_SmallMushrooms4|FragileDecor_SnowyRock1|FragileDecor_SnowyRock2|FragileDecor_SnowyRock3|FragileDecor_Stain1|FragileDecor_Stain2|FragileDecor_Stain3|FragileDecor_Stain4|FragileDecor_TeaCups|FragileDecor_Teacup|FragileDecor_Thorns1|FragileDecor_Thorns2|FragileDecor_Thorns3|FragileDecor_Thorns4|FragileDecor_Thorns5|FragileDecor_Thorns6|FragileDecor_Trash1|FragileDecor_Trash2|FragileDecor_Veggie1|FragileDecor_Veggie2|FragileDecor_Veggie3|FragileDecor_Veggie4|FragileDecor_Vine|FragileDecor_WallVines1|FragileDecor_WallVines2|FragileDecor_WallVines3|FragileDecor_WallVines4|FriendshipPadVariant_NumVariants|FriendshipPadVariant_Player1|FriendshipPadVariant_Player2|GAMEPAD_STICK_DEAD_ZONE|GAMEPAD_STICK_DIRECTION_DEAD_ZONE|GAME_BTN_ANALOG_DEADZONE|GAME_BUTTON_REPEAT_TIME|GAME_DIAMOND_COUNTERS_SCALE|GAME_NAME_FOR_FOLDERS|GAME_RECORDING_ICON_SCALE|GAME_SPEED|GAME_SPEED_MAX|GAME_SPEED_MIN|GAME_SPEED_MULT_OPTIONS|GAME_STOPWATCH_BTN_ANIM_SCALE|GAME_STOPWATCH_SCALE|GAME_UI_DEPTH|GAME_VIEW_FOLLOW_LAG|GHOST_COLOR_DARK|GHOST_COLOR_LIGHT|GHOST_COLOR_PRIMARY|GHOST_COLOR_SECONDARY|GIF_APP_EXT_BLOCK_LABEL|GIF_APP_EXT_BLOCK_STR|GIF_CLEAR_CODE|GIF_DISPOSAL_METHOD_CLEAR|GIF_DISPOSAL_METHOD_KEEP|GIF_DISPOSAL_METHOD_NONE|GIF_DISPOSAL_METHOD_RESET|GIF_END_OF_INFO_CODE|GIF_EXTENSION_DELIM_CHAR|GIF_EXT_COMMENT_COMMAND|GIF_EXT_COMMENT_STRING|GIF_FRAME_TIME|GIF_GRAPHIC_CONTROL_LABEL|GIF_IMAGE_DELIM_CHAR|GIF_REP_COUNT_INFINITE|GIF_SIGNATURE_STRING|GIF_TERMINATION_CHAR|GLEW_OK|GLFW_ALPHA_BITS|GLFW_ARROW_CURSOR|GLFW_AUTO_ICONIFY|GLFW_BLUE_BITS|GLFW_CLIENT_API|GLFW_CONNECTED|GLFW_CONTEXT_VERSION_MAJOR|GLFW_CONTEXT_VERSION_MINOR|GLFW_DECORATED|GLFW_DEPTH_BITS|GLFW_DISCONNECTED|GLFW_DONT_CARE|GLFW_DOUBLEBUFFER|GLFW_FALSE|GLFW_FLOATING|GLFW_FOCUSED|GLFW_GREEN_BITS|GLFW_HAND_CURSOR|GLFW_HRESIZE_CURSOR|GLFW_IBEAM_CURSOR|GLFW_ICONIFIED|GLFW_JOYSTICK_LAST|GLFW_OPENGL_ANY_PROFILE|GLFW_OPENGL_API|GLFW_OPENGL_CORE_PROFILE|GLFW_OPENGL_FORWARD_COMPAT|GLFW_OPENGL_PROFILE|GLFW_PRESS|GLFW_RED_BITS|GLFW_REFRESH_RATE|GLFW_REPEAT|GLFW_RESIZABLE|GLFW_SAMPLES|GLFW_STENCIL_BITS|GLFW_TRUE|GLFW_VRESIZE_CURSOR|GL_ALPHA_TEST|GL_ALWAYS|GL_ARRAY_BUFFER|GL_BLEND|GL_CLAMP_TO_EDGE|GL_COLOR_ATTACHMENT0|GL_COLOR_BUFFER_BIT|GL_DEPTH24_STENCIL8|GL_DEPTH_ATTACHMENT|GL_DEPTH_BUFFER_BIT|GL_DEPTH_COMPONENT|GL_DEPTH_COMPONENT24|GL_DEPTH_TEST|GL_EQUAL|GL_FALSE|GL_FLOAT|GL_FRAMEBUFFER|GL_FRAMEBUFFER_COMPLETE|GL_GEQUAL|GL_KEEP|GL_LEQUAL|GL_LINEAR|GL_LINEAR_MIPMAP_LINEAR|GL_NEAREST|GL_NEAREST_MIPMAP_NEAREST|GL_NEVER|GL_ONE_MINUS_SRC_ALPHA|GL_RENDERBUFFER|GL_RENDERER|GL_REPEAT|GL_REPLACE|GL_RGB|GL_RGBA|GL_SRC_ALPHA|GL_STENCIL_ATTACHMENT|GL_STENCIL_BUFFER_BIT|GL_STENCIL_TEST|GL_TEXTURE0|GL_TEXTURE1|GL_TEXTURE_2D|GL_TEXTURE_MAG_FILTER|GL_TEXTURE_MIN_FILTER|GL_TEXTURE_WRAP_S|GL_TEXTURE_WRAP_T|GL_TRIANGLES|GL_TRUE|GL_TRUE|GL_TRUE|GL_UNSIGNED_BYTE|GL_VERSION|GROUND_COLOR_DARK|GROUND_COLOR_PRIMARY|GROWING_HEAP_MAX_NUM_PAGES|GROWING_HEAP_PAGE_SIZE|GUI_SCALE|GameBtn_Cancel|GameBtn_Down|GameBtn_EditorColorWheel|GameBtn_EditorCopy|GameBtn_EditorCut|GameBtn_EditorCycleGroupDown|GameBtn_EditorCycleGroupUp|GameBtn_EditorCycleLeft|GameBtn_EditorCycleOption1Down|GameBtn_EditorCycleOption1Up|GameBtn_EditorCycleOption2Down|GameBtn_EditorCycleOption2Up|GameBtn_EditorCyclePlaceModeDown|GameBtn_EditorCyclePlaceModeUp|GameBtn_EditorCycleRight|GameBtn_EditorCycleToolDown|GameBtn_EditorCycleToolUp|GameBtn_EditorOptionsMenu|GameBtn_EditorPaste|GameBtn_EditorPickMenu|GameBtn_EditorPlace|GameBtn_EditorPlaceModeEntities|GameBtn_EditorPlaceModeRoofs|GameBtn_EditorPlaceModeTiles|GameBtn_EditorPlaceModeWalls|GameBtn_EditorPlaytest|GameBtn_EditorPlaytestHere|GameBtn_EditorRedo|GameBtn_EditorRemove|GameBtn_EditorSample|GameBtn_EditorSave|GameBtn_EditorToolBucket|GameBtn_EditorToolChunkPlacer|GameBtn_EditorToolPainter|GameBtn_EditorToolPlacer|GameBtn_EditorToolRectangle|GameBtn_EditorToolSelection|GameBtn_EditorUndo|GameBtn_Interact|GameBtn_Left|GameBtn_Menu|GameBtn_NumButtons|GameBtn_Player1Down|GameBtn_Player1Interact|GameBtn_Player1Left|GameBtn_Player1Reset|GameBtn_Player1Right|GameBtn_Player1Undo|GameBtn_Player1Up|GameBtn_Player2Down|GameBtn_Player2Interact|GameBtn_Player2Left|GameBtn_Player2Reset|GameBtn_Player2Right|GameBtn_Player2Undo|GameBtn_Player2Up|GameBtn_Reset|GameBtn_Right|GameBtn_SlowDown|GameBtn_SpeedUp|GameBtn_Undo|GameBtn_Up|GameBtn_ViewDown|GameBtn_ViewGrab|GameBtn_ViewLeft|GameBtn_ViewRight|GameBtn_ViewUp|GameColor_Black|GameColor_Blue|GameColor_Cyan|GameColor_Default|GameColor_Green|GameColor_NumColors|GameColor_Orange|GameColor_Other1|GameColor_Other2|GameColor_Purple|GameColor_Red|GameColor_White|GameColor_Yellow|GameRecordingEventType_FriendshipMode|GameRecordingEventType_GameStep|GameRecordingEventType_NoclipChanged|GameRecordingEventType_None|GameRecordingEventType_NumTypes|GameRecordingEventType_SaveTriggered|GameRecordingEventType_SettingsChanged|GameRecordingEventType_SpeedChanged|GameRecordingEventType_Undo|GamepadTransFlag_Pressed|GamepadTransFlag_Repeat|Gamepad_A|Gamepad_B|Gamepad_Back|Gamepad_Down|Gamepad_Home|Gamepad_Left|Gamepad_LeftBumper|Gamepad_LeftStick|Gamepad_LeftTrigger|Gamepad_NumButtons|Gamepad_Right|Gamepad_RightBumper|Gamepad_RightStick|Gamepad_RightTrigger|Gamepad_Start|Gamepad_Up|Gamepad_X|Gamepad_Y|Gamepad_lsDown|Gamepad_lsLeft|Gamepad_lsRight|Gamepad_lsUp|Gamepad_rsDown|Gamepad_rsLeft|Gamepad_rsRight|Gamepad_rsUp|GiverTriggerType_Disable|GiverTriggerType_Enable|GiverTriggerType_None|GiverTriggerType_NumTypes|GiverTriggerType_Toggle|GloveVariant_Bow|GloveVariant_Dig|GloveVariant_Fire|GloveVariant_Lightning|GloveVariant_NumVariants|GloveVariant_PortalGun|GloveVariant_PullWand|GloveVariant_PushWand|GloveVariant_Strength|GlyphGroup1_Arrow1|GlyphGroup1_Arrow2|GlyphGroup1_Arrow3|GlyphGroup1_FireBall|GlyphGroup1_NumVariants|GlyphGroup1_PlayerExplode|GlyphGroup1_PlayerGlyph1|GlyphGroup1_PlayerGlyph2|GlyphGroup1_Recycle1|GlyphGroup1_Timer|GlyphGroup2_CheckLarge|GlyphGroup2_CheckSmall|GlyphGroup2_CircleLarge|GlyphGroup2_CircleSmall|GlyphGroup2_CrossLarge|GlyphGroup2_CrossSmall|GlyphGroup2_NumVariants|GlyphGroup2_SquareLarge|GlyphGroup2_SquareSmall|GlyphGroup3_Circle|GlyphGroup3_NumVariants|GlyphGroup3_Square1|GlyphGroup3_Square2|GlyphGroup3_Square3|GlyphGroup3_Square4|GlyphGroup3_Square5|GlyphLayer_Bottom|GlyphLayer_Middle|GlyphLayer_NumLayers|GlyphLayer_Top|GroundVariant_Brick1|GroundVariant_Brick2|GroundVariant_Brick3|GroundVariant_Brick4|GroundVariant_Brick5|GroundVariant_BrickOutline|GroundVariant_Default|GroundVariant_Dirt|GroundVariant_Fan|GroundVariant_Grass|GroundVariant_Grooved|GroundVariant_LargeTiles|GroundVariant_NumVariants|GroundVariant_PowerGrid|GroundVariant_Rocky|GroundVariant_Sandstone1|GroundVariant_Sandstone2|GroundVariant_Sectional|GroundVariant_Slime|GroundVariant_Tiles|HIDDEN_PATH_HIDE_TIME|HIDDEN_PATH_RADIUS|HIDDEN_PATH_REVEAL_TIME|HIGH_FIVE_ANIM_TIME_LEFT_RIGHT|HIGH_FIVE_ANIM_TIME_UP_DOWN|HIT_SWITCH_RETRACT_ANIM_TIME|Handles_Four|Handles_None|Handles_NumOptions|Handles_One|Handles_Three|Handles_TwoAdjacent|Handles_TwoOpposite|HitSwitchTriggerType_None|HitSwitchTriggerType_NumOptions|HitSwitchTriggerType_OnSwitch|HitSwitchTriggerType_OnSwitchOff|HitSwitchTriggerType_OnSwitchOn|ICE_COLOR_DARK|ICE_COLOR_LIGHT|ICE_COLOR_PRIMARY|ICE_COLOR_SECONDARY|INFO_OUTPUT_ENABLED|INITIAL_APP_STATE|INT_STUDIO_LOGO_ANIM_FRAME_TIME|INT_STUDIO_LOGO_ANIM_TIME|INT_STUDIO_LOGO_FADE_IN_TIME|INT_STUDIO_LOGO_FADE_OUT_TIME|INT_STUDIO_LOGO_NAME_PADDING|INT_STUDIO_LOGO_SCALE|INVALID_HANDLE_VALUE|INV_ITEM_SCALE|INV_ITEM_SPACING|INV_MENU_MARGIN|INV_MENU_PADDING|INV_MIN_NUM_COLUMNS|InputEventType_ButtonTransition|InputEventType_GamepadTransition|InputEventType_MouseMoved|InputEventType_MouseScrolled|InputMethod_KeyboardMouse|InputMethod_NumInputMethods|InputMethod_PsController|InputMethod_XbController|InputPriority_Automatic|InputPriority_GamepadOnly|InputPriority_KeyboardOnly|InputPriority_NumOptions|KeyVariant_Default|KeyVariant_NumVariants|KeyVariant_Skeleton|LED_OFF_COLOR_DARK|LED_OFF_COLOR_LIGHT|LED_OFF_COLOR_PRIMARY|LED_OFF_COLOR_SECONDARY|LEVELS_FLDR|LEVEL_FILENAME_MAX_LENGTH|LEVEL_TITLE_MAX_LENGTH|LEVER_RETRACT_ANIM_TIME|LIGHT_FADE_TIME|LIGHT_LIGHT_TIME|LINUX_COMPILATION|Language_English|Language_Japanese|Language_NumLanguages|Language_SimplifiedChinese|Language_Spanish|LavaFilled_Barrel1|LavaFilled_Barrel2|LavaFilled_Boulder|LavaFilled_Box|LavaFilled_NumVariants|LevelType_Adventure|LevelType_Developer|LevelType_Downloaded|LevelType_Multiplayer|LevelType_None|LevelType_NumTypes|LevelType_Player|LevelType_Puzzle|LevelType_Versus|LeverVariant_Default|LeverVariant_Joystick|LeverVariant_NumVariants|LightTriggerType_Activate|LightTriggerType_Deactivate|LightTriggerType_None|LightTriggerType_NumTypes|LightTriggerType_Toggle|LightVariant_Default|LightVariant_NumVariants|LightVariant_Small|LockboxTriggerType_Lock|LockboxTriggerType_None|LockboxTriggerType_NumTypes|LockboxTriggerType_Toggle|LockboxTriggerType_Unlock|MAIN_HUB_RETURN_LEVEL_INDEX|MAP_ANIM_ALLOC_SIZE|MAX_ALLOWED_UNDOS|MAX_BUTTONS_QUEUED|MAX_CRASH_DUMPS|MAX_GIF_LZW_CODE_WIDTH|MAX_INPUT_TEXT_LENGTH|MAX_NUM_GAMEPADS|MAX_NUM_GAME_PARTICLES|MAX_NUM_INPUT_EVENTS|MAX_NUM_SAVE_SLOTS|MAX_NUM_THREADS|MAX_RESOLVE_MOVEMENT_PASSES|MAX_SOUND_INSTANCES|MAX_STARTUP_OP_PATH_LENGTH|MAX_WINDOW_TITLE_LENGTH|MEMORY_ARENA_META_INFO_ENABLED|MEM_COMMIT|MEM_RESERVE|METAL_COLOR_DARK|METAL_COLOR_LIGHT|METAL_COLOR_PRIMARY|METAL_COLOR_SECONDARY|META_FILE_PATH|MINIMAP_ALPHA_HIGH|MINIMAP_ALPHA_LOW|MINIMAP_BASE_CHUNK_SIZE|MINIMAP_CHUNKS_VISIBLE|MINIMAP_CHUNK_PADDING|MINIMAP_FADE_TIME|MINIMAP_MAX_SCALE|MINIMAP_VIEW_LAG|MIN_CHUNK_HEIGHT|MIN_CHUNK_WIDTH|MIN_OPENGL_VERSION_MAJOR|MIN_OPENGL_VERSION_MINOR|MISSING_SOUND_PATH|MISSING_SOUND_PATH_LOOPING|MISSING_TEXTURE_PATH|MM_BACKGROUND_COLOR|MM_CANT_BUY_ANIM_TIME|MM_DEF_FONT_SIZE|MM_DUNGEON_NAME_SPACING|MM_HORIZON_HEIGHT|MM_INTRO_ANIM_TIME|MM_INTRO_FONT_SIZE|MM_LEVEL_NAME_SPACING|MM_OPTION_SPACING|MM_PW_CLOSE_TIME|MM_PW_CONFIRM_FONT_SIZE|MM_PW_EDIT_BTN_MARGIN|MM_PW_EDIT_BTN_MIN_WIDTH|MM_PW_FONT_SIZE|MM_PW_FONT_SIZE_SMALL|MM_PW_LVL_LIST_ITEM_SIZE|MM_PW_LVL_LIST_PADDING|MM_PW_LVL_LIST_SPACING|MM_PW_MARGIN|MM_PW_OPEN_TIME|MM_PW_OPTION_BUTTON_MIN_WIDTH|MM_PW_OPTION_BUTTON_PADDING|MM_PW_OPTION_BUTTON_SPACING|MM_PW_OPTION_FONT_SIZE|MM_PW_OPTION_WINDOW_PADDING|MM_PW_PADDING|MM_PW_SCROLL_LAG|MM_PW_SCROLL_WHEEL_SPEED|MM_SHOW_VERSION_NUMS|MM_TITLE_FONT_SIZE|MM_VIEW_LAG|MONITOR_REFRESH_RATE|MOUSE_COLOR_DARK|MOUSE_COLOR_EYES|MOUSE_COLOR_PRIMARY|MOUSE_COLOR_SECONDARY|MOVE_COUNT_FONT_SIZE|MOVE_TASK_ALLOC_SIZE|MP_BOMBS_ALLOC_SIZE|MP_BOMB_BLOW_TIME|MP_BOMB_LONG_RANGE|MP_BOMB_RANGE|MP_BOMB_SHORT_BLOW_TIME|MP_BOMB_TELEGRAPH_TIME|MP_EXPLOSION_TIME|MP_MOVE_SPEED|MP_PLAYER_LARGE_RADIUS|MP_PLAYER_RADIUS|MP_PLAYER_SMALL_RADIUS|MP_POWERUP_SPAWN_RATE|MP_WIN_FONT_SIZE|MUSIC_FLDR|MainMenuOptionType_AdventurePack|MainMenuOptionType_Changelog|MainMenuOptionType_Credits|MainMenuOptionType_DeveloperPack|MainMenuOptionType_DownloadedPack|MainMenuOptionType_Editor|MainMenuOptionType_MultiplayerPack|MainMenuOptionType_NumTypes|MainMenuOptionType_PuzzlePack|MainMenuOptionType_Quit|MainMenuOptionType_Settings|MainMenuOptionType_UnassignedPack|MainMenuOptionType_VersusPack|Mat4_Identity|Matrix4_Identity|MemoryArenaType_External|MemoryArenaType_GrowingHeap|MemoryArenaType_Heap|MemoryArenaType_Linear|MemoryArenaType_StdHeap|MemoryArenaType_Temp|Modifier_All|Modifier_Alt|Modifier_AltShift|Modifier_CapsLock|Modifier_Ctrl|Modifier_CtrlAlt|Modifier_CtrlAltShift|Modifier_CtrlShift|Modifier_None|Modifier_Shift|MonokaiBack|MonokaiBlack|MonokaiBlue|MonokaiBrown|MonokaiDarkGray|MonokaiDarkGreen|MonokaiFadedYellow|MonokaiGray1|MonokaiGray2|MonokaiGreen|MonokaiLightBlue|MonokaiLightGray|MonokaiLightPurple|MonokaiLightRed|MonokaiLightYellow|MonokaiMagenta|MonokaiOrange|MonokaiPurple|MonokaiRed|MonokaiWhite|MonokaiYellow|MonsterAiType_AutoPull|MonsterAiType_Bounce|MonsterAiType_CopyPlayer|MonsterAiType_FacePlayer|MonsterAiType_FollowPlayer|MonsterAiType_Forward|MonsterAiType_MirrorHorizontal|MonsterAiType_MirrorVertical|MonsterAiType_None|MonsterAiType_NumTypes|MonsterAiType_OppositePlayer|MonsterAiType_PatrolLeft|MonsterAiType_PatrolRight|MonsterAiType_Random|MonsterAiType_RunFromPlayer|MonsterAiType_SeePlayer|MonsterAiType_TurnLeft|MonsterAiType_TurnRandom|MonsterAiType_TurnRight|MonsterAnim_Burning|MonsterAnim_Drowning|MonsterAnim_Exploding|MonsterAnim_Falling|MonsterAnim_Idle|MonsterAnim_LavaSinking|MonsterAnim_Squashed|MonsterAvoidance_AvoidHazardousTiles|MonsterAvoidance_None|MonsterAvoidance_NumTypes|MonsterAvoidance_StayOnSameTile|MonsterMoveTrigger_Always|MonsterMoveTrigger_NumTypes|MonsterMoveTrigger_OnPlayerMove|MonsterMoveTrigger_OnPlayerMoveInChunk|MonsterMoveTrigger_OnPlayerMoveInRoom|MonsterMoveTrigger_WhileInChunk|MonsterMoveTrigger_WhileInRoom|MonsterTriggerType_AboveMin|MonsterTriggerType_AboveMinAlways|MonsterTriggerType_BelowMin|MonsterTriggerType_BelowMinAlways|MonsterTriggerType_CountChanges|MonsterTriggerType_CountFalls|MonsterTriggerType_CountRises|MonsterTriggerType_NumTypes|MonsterType_All|MonsterType_Bats|MonsterType_Critters|MonsterType_Ghosts|MonsterType_Goblins|MonsterType_Large|MonsterType_Mice|MonsterType_Moths|MonsterType_NumMonsterTypes|MonsterType_Robots|MonsterType_Skeletons|MonsterType_Small|MonsterType_Spiders|Month_April|Month_August|Month_December|Month_February|Month_January|Month_July|Month_June|Month_March|Month_May|Month_November|Month_October|Month_September|MothVariant_Bee|MothVariant_Bird|MothVariant_DragonFly|MothVariant_Moth|MothVariant_NumVariants|MouseButton_Left|MouseButton_Middle|MouseButton_Right|MouseMode_Default|MouseMode_Delta|MouseMode_Hidden|MouseMode_NumModes|MoveCause_Force|MoveCause_Ice|MoveCause_MonsterAi|MoveCause_None|MoveCause_Piston|MoveCause_PlayerInput|MoveCause_Projectile|MoveCause_PullingBag|MoveCause_Pusher|MoveCause_Rolling|MoveCause_Shockwave|MoveCause_Spawner|MoveCause_Transfer|MoveResult_Failed|MoveResult_Pending|MoveResult_Success|MoveTaskResult_t|MultiPower_Fast|MultiPower_KickBombs|MultiPower_Large|MultiPower_LargeExplosion|MultiPower_Lightspeed|MultiPower_QuickBombs|MultiPower_Slow|MultiPower_Small|NEW_LEVEL_NAME|NOTIFY_OUTPUT_ENABLED|NUM_COLORS|NUM_DAYS_PER_4YEARS|NUM_DAYS_PER_WEEK|NUM_DAYS_PER_YEAR|NUM_DUNGEONS|NUM_ENTITY_DEPTH_OPTIONS|NUM_ENTITY_OPTIONS|NUM_HOUR_PER_DAY|NUM_MIN_PER_DAY|NUM_MIN_PER_HOUR|NUM_MIN_PER_WEEK|NUM_MS_PER_DAY|NUM_MS_PER_HOUR|NUM_MS_PER_MINUTE|NUM_MS_PER_SECOND|NUM_MS_PER_YEAR|NUM_PALETTE_COLORS|NUM_RESOURCES|NUM_RESOURCE_FONTS|NUM_RESOURCE_MUSICS|NUM_RESOURCE_SHADERS|NUM_RESOURCE_SHEETS|NUM_RESOURCE_TEXTURES|NUM_SEC_PER_DAY|NUM_SEC_PER_HOUR|NUM_SEC_PER_MINUTE|NUM_SEC_PER_WEEK|NUM_SEC_PER_YEAR|NUM_SOUND_EFFECT_RESOURCES|NWS_CLOSE_HINT_ICON_SCALE|NWS_CLOSE_HINT_PADDING|NWS_CLOSE_HINT_TEXT_SCALE|NWS_CONTENT_SCROLL_EXTRA|NumEntityTypes|NumTileTypes|NumberTriggerType_Clear|NumberTriggerType_Decrement|NumberTriggerType_Increment|NumberTriggerType_None|NumberTriggerType_NumTypes|NumberVariant_Default|NumberVariant_NumVariants|NumberVariant_Screen|OGG_READ_BUFFER_SIZE|OPENGL_DEBUG_CONTEXT|OPENGL_FORCE_FORWARD_COMPAT|OPENGL_REQUEST_VERSION_MAJOR|OPENGL_REQUEST_VERSION_MINOR|OPEN_CONSOLE_WINDOW|OSX_COMPILATION|OTHER_OUTPUT_ENABLED|Obb2_Zero|OperatorVariant_Divide|OperatorVariant_Minus|OperatorVariant_NumVariants|OperatorVariant_Plus|OperatorVariant_Times|OperatorVariant_Xor|OptionType_Bitwise|OptionType_Boolean|OptionType_Corners|OptionType_Direction|OptionType_GameColor|OptionType_Generic|OptionType_Group|OptionType_Icons|OptionType_Integer|OptionType_None|OptionType_NumTypes|OptionType_Sides|OverheadDecor_MetalGrate|OverheadDecor_MetalGrateCorner|OverheadDecor_MetalGrateCornerLarge|OverheadDecor_MetalGrateEdge|OverheadDecor_MetalGrateEdgeLarge|OverheadDecor_MetalGrateLarge|OverheadDecor_NumVariants|OverheadDecor_RootTangleCap|OverheadDecor_RootTangleCenter|OverheadDecor_RootTangleCorner|OverheadDecor_RootTangleStraight|OverheadDecor_RootTangleTri|OverheadDecor_Sparkles1|OverheadDecor_Sparkles2|OverheadDecor_Sparkles3|OverheadDecor_Sparkles4|OverheadDecor_Web1|OverheadDecor_Web2|OverheadDecor_Web3|OverheadDecor_Web4|OverheadDecor_Web5|OverheadDecor_WoodenBeam|OverheadDecor_WoodenBeamEnd|OverheadDecor_WoodenLattice|OverheadDecor_WoodenLatticeEnd|PACKS_LIST_FILE_PATH|PAGE_READWRITE|PALETTE_FILE_PATH|PALETTE_FLDR|PEACH_ANIM_SPEED|PET_ANIM_TIME|PICK_MENU_NUM_ENTITIES|PICK_MENU_NUM_TILES|PICK_MENU_PADDING|PLATFORM_HEAP_SIZE|PLATFORM_TEMP_MAX_NUM_MARKS|PLATFORM_TEMP_SIZE|PLATFORM_VERSION_BUILD|PLATFORM_VERSION_MAJOR|PLATFORM_VERSION_MINOR|PLAT_DEBUG_OUTPUT_ENABLED|PLAT_FLIP_SYNC_DETECT_THRESHOLD|PLAT_MANUAL_WAIT_KICK_IN_TIME|PLAT_MIN_FRAME_WAIT_TIME|PLAYER1_COLOR_DARK|PLAYER1_COLOR_LIGHT|PLAYER1_COLOR_PRIMARY|PLAYER1_COLOR_SECONDARY|PLAYER2_COLOR_DARK|PLAYER2_COLOR_LIGHT|PLAYER2_COLOR_PRIMARY|PLAYER2_COLOR_SECONDARY|PLAYER3_COLOR_DARK|PLAYER3_COLOR_LIGHT|PLAYER3_COLOR_PRIMARY|PLAYER3_COLOR_SECONDARY|PLAYER4_COLOR_DARK|PLAYER4_COLOR_LIGHT|PLAYER4_COLOR_PRIMARY|PLAYER4_COLOR_SECONDARY|PLAYER_LIGHT_RADIUS|PLAYER_PUSH_DEPTH|PLAYER_PUSH_SLOW_ANIMATION_TIME|PLAYER_RESPAWN_TIME|PLAYER_SLIDE_ANIMATION_TIME|PLAYER_WALK_ANIMATION_TIME|PLAYER_WALK_ANIM_START_OFFSET|PLAY_MISSING_SOUNDS|PORTAL_CREATE_ANIM_TIME|PORTAL_DESTROY_ANIM_TIME|POWERUP_SPAWN_RATE|POWERUP_SPEED_MULT|PRG_CLOSE_TIME|PRG_MAP_LEVEL_NAME_FONT_SIZE|PRG_MAP_NODE_NUM_FONT_SIZE|PRG_OPEN_TIME|PRG_OPTION_FONT_SIZE|PRG_OPTION_ICON_PADDING|PRG_OPTION_PADDING|PRG_OPTION_SPACING|PRG_SUBTITLE_FONT_SIZE|PRG_TITLE_FONT_SIZE|PULL_LEVER_TIME|PUSHER_PUSH_DEPTH|PackWindowOption_Cancel|PackWindowOption_DeleteLevel|PackWindowOption_DuplicateLevel|PackWindowOption_NumOptions|ParsingTokenType_Comment|ParsingTokenType_Header|ParsingTokenType_KeyValue|ParsingTokenType_NumTypes|ParsingTokenType_Other|ParsingTokenType_Unknown|ParsingTokenType_ValueList|ParticleFlag_Alive|ParticleFlag_Collision|ParticleFlag_MinimapSpace|ParticleFlag_ScreenSpace|PetAnim_Barking|PetAnim_BeingPet|PetAnim_Idle|PetVariant_DogBrown|PetVariant_DogGrey|PetVariant_DogOrange|PetVariant_NumVariants|Pi32|Pi64|PickCategory_Boxes|PickCategory_Carpets|PickCategory_Coop|PickCategory_Core|PickCategory_Cracks|PickCategory_Decorations|PickCategory_Glyphs|PickCategory_Ground|PickCategory_HalfDark|PickCategory_Hazards|PickCategory_HiddenPath|PickCategory_Lighting|PickCategory_Math|PickCategory_Meta|PickCategory_Monsters|PickCategory_None|PickCategory_NormalWalls|PickCategory_NumCategories|PickCategory_Other|PickCategory_Other|PickCategory_OtherDecorations|PickCategory_OtherTiles|PickCategory_OverheadDecorations|PickCategory_PitchBlack|PickCategory_Powerups|PickCategory_Pushers|PickCategory_SolidDecorations|PickCategory_ToggleWall|PickCategory_Triggers|PickMenuTab_Entities|PickMenuTab_NumTabs|PickMenuTab_Options|PickMenuTab_Roofs|PickMenuTab_Tiles|PickMenuTab_Walls|PistonTriggerType_Extend|PistonTriggerType_None|PistonTriggerType_NumTypes|PistonTriggerType_Retract|PistonTriggerType_Toggle|PlaceMode_Entities|PlaceMode_NumModes|PlaceMode_Roofs|PlaceMode_Tiles|PlaceMode_Walls|Platform_Linux|Platform_NumTypes|Platform_OSX|Platform_Windows|PlaybackEventType_FriendshipMode|PlaybackEventType_GameStep|PlaybackEventType_NoclipChanged|PlaybackEventType_None|PlaybackEventType_NumTypes|PlaybackEventType_SaveTriggered|PlaybackEventType_SettingsChanged|PlaybackEventType_SpeedChanged|PlaybackEventType_Undo|PlayerAnim_Bow|PlayerAnim_Burning|PlayerAnim_CantMove|PlayerAnim_Crouching|PlayerAnim_Drowning|PlayerAnim_Exploding|PlayerAnim_Falling|PlayerAnim_HighFive|PlayerAnim_Idle|PlayerAnim_Interacting|PlayerAnim_LavaSinking|PlayerAnim_Leaning|PlayerAnim_LevelComplete|PlayerAnim_OpeningChest|PlayerAnim_Petting|PlayerAnim_PressingWallButton|PlayerAnim_PullingBag|PlayerAnim_PullingBox|PlayerAnim_PullingLever|PlayerAnim_Pushing|PlayerAnim_Respawning|PlayerAnim_Sliding|PlayerAnim_SwordSwing|PlayerAnim_Walking|PlayerAnim_Warping|PlayerSeparatorTriggerType_Disable|PlayerSeparatorTriggerType_Enable|PlayerSeparatorTriggerType_None|PlayerSeparatorTriggerType_NumTypes|PlayerSeparatorTriggerType_Toggle|PlayerSeparatorVariant_NumVariants|PlayerSeparatorVariant_Player1|PlayerSeparatorVariant_Player2|PlayerVariant_CoopPlayer1|PlayerVariant_CoopPlayer2|PlayerVariant_CoopPlayer3|PlayerVariant_NumVariants|PlayerVariant_Solo|PortalAnim_Create|PortalAnim_Destroy|PortalAnim_Idle|PortalTriggerType_Close|PortalTriggerType_None|PortalTriggerType_NumTypes|PortalTriggerType_Open|PortalTriggerType_Toggle|PortalVariant_Default|PortalVariant_NumVariants|PortalVariant_Spawner|PowerupBit_Bow|PowerupBit_Dig|PowerupBit_FireHands|PowerupBit_FireShoes|PowerupBit_IceSkates|PowerupBit_JesterShoes|PowerupBit_LavaBoots|PowerupBit_LightningHands|PowerupBit_NumBits|PowerupBit_PegasusBoots|PowerupBit_PortalGun|PowerupBit_PullWand|PowerupBit_PushWand|PowerupBit_PusherShoes|PowerupBit_SpikeShoes|PowerupBit_Strength|PowerupBit_Sword|PowerupBit_WaterBoots|PressurePlateAnim_Idle|PressurePlateAnim_Pressed|PressurePlateVariant_NumVariants|PressurePlateVariant_Round|PressurePlateVariant_Square|ProgressMenuOptionType_Continue|ProgressMenuOptionType_LastCheckpoint|ProgressMenuOptionType_MainMenu|ProgressMenuOptionType_NumOptions|ProgressMenuOptionType_ResetLevel|ProgressMenuOptionType_SaveAndQuit|ProgressMenuOptionType_Settings|ProgressMenuOptionType_StartCoopMode|ProgressTab_t|ProjectileAnim_Default|ProjectileAnim_HitFront|ProjectileAnim_HitHere|ProjectileVariant_Arrow|ProjectileVariant_FireBall|ProjectileVariant_Lightning|ProjectileVariant_NumVariants|ProjectileVariant_PortalGun|ProjectileVariant_Pull|ProjectileVariant_Push|PusherEntVariant_Arrows|PusherEntVariant_Conveyor|PusherEntVariant_Default|PusherEntVariant_NumVariants|PusherTriggerType_Activate|PusherTriggerType_Deactivate|PusherTriggerType_None|PusherTriggerType_NumTypes|PusherTriggerType_Toggle|PusherVariant_Down|PusherVariant_Left|PusherVariant_NumVariants|PusherVariant_Right|PusherVariant_Up|RAND_MAX|RECORD_RC_DEBUG_INFO|RED_DIAMOND_COLOR_DARK|RED_DIAMOND_COLOR_LIGHT|RED_DIAMOND_COLOR_PRIMARY|RED_DIAMOND_COLOR_SECONDARY|REGULAR_OUTPUT_ENABLED|REPLACE_COLOR_1_DARK|REPLACE_COLOR_1_LIGHT|REPLACE_COLOR_1_PRIMARY|REPLACE_COLOR_1_SECONDARY|REPLACE_COLOR_2_DARK|REPLACE_COLOR_2_LIGHT|REPLACE_COLOR_2_PRIMARY|REPLACE_COLOR_2_SECONDARY|REPLACE_COLOR_3_DARK|REPLACE_COLOR_3_LIGHT|REPLACE_COLOR_3_PRIMARY|REPLACE_COLOR_3_SECONDARY|REPLACE_COLOR_4_DARK|REPLACE_COLOR_4_LIGHT|REPLACE_COLOR_4_PRIMARY|REPLACE_COLOR_4_SECONDARY|REPLACE_COLOR_5_DARK|REPLACE_COLOR_5_LIGHT|REPLACE_COLOR_5_PRIMARY|REPLACE_COLOR_5_SECONDARY|RESETTER_ANIM_TIME|RESETTER_PLAYER_NEEDED_ANIM_TIME|REVISION_ALLOWANCE_TIME|ROOF_HIDE_TIME|ROOF_REVEAL_TIME|ROOM_DISCOVER_HIGHLIGHT_TIME|ROTATOR_ANIM_TIME|RailCornerOption_All|RailCornerOption_None|RailCornerOption_NumOptions|RailCornerOption_Some1|RailCornerOption_Some2|RailCornerOption_Some3|RailCornerOption_Some4|RailPolarity_Both|RailPolarity_Inside|RailPolarity_None|RailPolarity_NumPolarities|RailPolarity_Outside|RailTriggerType_ActivateBoth|RailTriggerType_ActivateInside|RailTriggerType_ActivateOutside|RailTriggerType_DeactivateBoth|RailTriggerType_DeactivateInside|RailTriggerType_DeactivateOutside|RailTriggerType_None|RailTriggerType_NumOptions|RailTriggerType_ToggleBoth|RailTriggerType_ToggleInside|RailTriggerType_ToggleOutside|RailVariant_AllDirections|RailVariant_Corner|RailVariant_DeadEnd|RailVariant_NumVariants|RailVariant_Straight|RailVariant_TJunction|Rec_Zero|Reci_Zero|ResType_Font|ResType_NumTypes|ResType_Palette|ResType_Shader|ResType_Sound|ResType_Sprite|ResType_SpriteSheet|ResetterVariant_CoopPlayer1|ResetterVariant_CoopPlayer2|ResetterVariant_Default|ResetterVariant_NumVariants|Resolution_1024x768|Resolution_1152x864|Resolution_1176x664|Resolution_1280x1024|Resolution_1280x720|Resolution_1280x768|Resolution_1280x800|Resolution_1280x960|Resolution_1360x768|Resolution_1366x768|Resolution_1440x900|Resolution_1600x1024|Resolution_1600x1200|Resolution_1600x900|Resolution_1680x1050|Resolution_1768x992|Resolution_1920x1080|Resolution_1920x1200|Resolution_1920x1440|Resolution_2048x1536|Resolution_2560x1440|Resolution_2560x1600|Resolution_3840x2160|Resolution_640x480|Resolution_720x480|Resolution_720x576|Resolution_800x600|Resolution_NumOptions|ResourceType_Font|ResourceType_Music|ResourceType_NumTypes|ResourceType_Shader|ResourceType_SpriteSheet|ResourceType_Texture|ResourceType_Unknown|RobotTriggerType_DisableAi|RobotTriggerType_EnableAi|RobotTriggerType_None|RobotTriggerType_NumTypes|RobotTriggerType_ToggleAi|RoofVariant_Black1|RoofVariant_Black2|RoofVariant_Default|RoofVariant_ForestCanopy|RoofVariant_Gray|RoofVariant_Leaves|RoofVariant_NumVariants|RoofVariant_Wood|RoomViewMode_ChunksDefault|RoomViewMode_ChunksSmooth|RoomViewMode_ChunksStrict|RoomViewMode_FreeRoamDefault|RoomViewMode_FreeRoamSmooth|RoomViewMode_FreeRoamStrict|RoomViewMode_NumModes|RotatorTriggerType_Clockwise|RotatorTriggerType_CounterClockwise|RotatorTriggerType_Down|RotatorTriggerType_Flip|RotatorTriggerType_Left|RotatorTriggerType_None|RotatorTriggerType_NumTypes|RotatorTriggerType_Random|RotatorTriggerType_Right|RotatorTriggerType_RoundRobin|RotatorTriggerType_Up|RotatorVariant_Default|RotatorVariant_Meta|RotatorVariant_NumVariants|SAMPLE_BUFFER_ALLOC_SIZE|SAVES_FLDR|SAVE_ANIM_TIME|SAVE_COLOR_1|SAVE_COLOR_2|SCREENSHOT_COUNTDOWN_MAX_TIME|SCREENSHOT_MESSAGE_DISPLAY_TIME|SCREENSHOT_MESSAGE_FADE_TIME|SCREENSHOT_MODE|SECONDS_PER_4YEARS|SECONDS_PER_DAY|SECONDS_PER_HOUR|SECONDS_PER_WEEK|SETTINGS_FILE_NAME|SETT_FONT_SIZE|SETT_GAMEPAD_REDC_TEXT_MARGIN|SETT_HINT_FONT_SIZE|SETT_KEYBOARD_REDC_TEXT_MARGIN|SETT_KEYBORD_KEY_PADDING|SETT_KEYBORD_KEY_SIZE|SETT_MENU_CLOSE_TIME|SETT_MENU_OPEN_TIME|SETT_OPTION_ITEM_PADDING|SETT_OPTION_LIST_CLOSE_TIME|SETT_OPTION_LIST_MARGIN|SETT_OPTION_LIST_OPEN_TIME|SETT_SCROLL_LAG|SETT_SCROLL_WHEEL_SPEED|SETT_SMALL_FONT_SIZE|SETT_SUB_MENU_ANIM_TIME|SETT_TITLE_FONT_SIZE|SETT_VIEWPORT_PADDING|SHADERS_FLDR|SHEETS_FLDR|SHOE_PICKUP_PART_SPAWN_DIST|SKELETON_COLOR_DARK|SKELETON_COLOR_LIGHT|SKELETON_COLOR_PRIMARY|SKELETON_COLOR_SECONDARY|SLATS_WIPE_SPEED|SLIME_COLOR_DARK|SLIME_COLOR_LIGHT|SLIME_COLOR_PRIMARY|SLIME_COLOR_SECONDARY|SND_EFFECT_COMBINE_TIME|SOUNDS_FLDR|SOUNDS_META_FILE_PATH|SPRITES_FLDR|START_PACK|STEAM_BUILD|STONE_COLOR_DARK|STONE_COLOR_LIGHT|STONE_COLOR_PRIMARY|STONE_COLOR_SECONDARY|STRENGTH_PUSH_DEPTH|SWIRL_WIPE_SPEED|SaveSpotTriggerType_Activate|SaveSpotTriggerType_Deactivate|SaveSpotTriggerType_None|SaveSpotTriggerType_NumTypes|SaveSpotTriggerType_Toggle|ScreenWipeSpinnerChoice_BatExploding|ScreenWipeSpinnerChoice_BatWalking|ScreenWipeSpinnerChoice_DiamondSparkling|ScreenWipeSpinnerChoice_GroundCrumbling|ScreenWipeSpinnerChoice_IceDissolving|ScreenWipeSpinnerChoice_IceFloating|ScreenWipeSpinnerChoice_Lava|ScreenWipeSpinnerChoice_MetalBarrelFloating|ScreenWipeSpinnerChoice_MetalBoxFloating|ScreenWipeSpinnerChoice_MouseBurning|ScreenWipeSpinnerChoice_MouseDrowning|ScreenWipeSpinnerChoice_MouseExploding|ScreenWipeSpinnerChoice_MouseFalling|ScreenWipeSpinnerChoice_MouseWalking|ScreenWipeSpinnerChoice_NumOptions|ScreenWipeSpinnerChoice_PlayerBurning|ScreenWipeSpinnerChoice_PlayerDancing|ScreenWipeSpinnerChoice_PlayerDrowning|ScreenWipeSpinnerChoice_PlayerExploding|ScreenWipeSpinnerChoice_PlayerFalling|ScreenWipeSpinnerChoice_PlayerPulling|ScreenWipeSpinnerChoice_PlayerPushing|ScreenWipeSpinnerChoice_PlayerTeleporting|ScreenWipeSpinnerChoice_PlayerWalking|ScreenWipeSpinnerChoice_RedDiamondSparkling|ScreenWipeSpinnerChoice_SkeletonBurning|ScreenWipeSpinnerChoice_SkeletonDrowning|ScreenWipeSpinnerChoice_SkeletonExploding|ScreenWipeSpinnerChoice_SkeletonFalling|ScreenWipeSpinnerChoice_SkeletonWalking|ScreenWipeSpinnerChoice_SlimeDissolving|ScreenWipeSpinnerChoice_SlimeFloating|ScreenWipeSpinnerChoice_SlimeWebBreaking|ScreenWipeSpinnerChoice_Spikes|ScreenWipeSpinnerChoice_Teleporter|ScreenWipeSpinnerChoice_Water|ScreenWipeSpinnerChoice_WoodBarrelFloating|ScreenWipeSpinnerChoice_WoodBoxFloating|ScreenWipeStencil_BottomUp|ScreenWipeStencil_Fade|ScreenWipeStencil_Fizzle|ScreenWipeStencil_HorizontalSlats|ScreenWipeStencil_LeftToRight|ScreenWipeStencil_RightToLeft|ScreenWipeStencil_Swirl|ScreenWipeStencil_TopDown|ScreenWipeStencil_VerticalSlats|ScreenWipe_BlackWithSpinner|ScreenWipe_Psychedelic|ScreenWipe_Simple|SensorDetectType_Both|SensorDetectType_Monsters|SensorDetectType_NumTypes|SensorDetectType_Player|SettingType_Boolean|SettingType_KeyBinding|SettingType_None|SettingType_NumTypes|SettingType_PadBinding|SettingType_Version|SettingType_i32|SettingType_r32|SettingType_u32|SettingType_u8|SettingsBtnTag_AccessibilityNav|SettingsBtnTag_ActivateButtonHold|SettingsBtnTag_DiamondsRestoreLives|SettingsBtnTag_Fullscreen|SettingsBtnTag_GameSpeed|SettingsBtnTag_GamepadControlsNav|SettingsBtnTag_GameplayNav|SettingsBtnTag_InputPriority|SettingsBtnTag_InstantReset|SettingsBtnTag_KeyBinding|SettingsBtnTag_KeyboardControlsNav|SettingsBtnTag_Language|SettingsBtnTag_LevelStartCountdown|SettingsBtnTag_MasterVolume|SettingsBtnTag_Minimap|SettingsBtnTag_Music|SettingsBtnTag_NoPlayerLight|SettingsBtnTag_ParticleEffects|SettingsBtnTag_PermaDeath|SettingsBtnTag_Resolution|SettingsBtnTag_RewindAfterDeath|SettingsBtnTag_RewindDuringDeath|SettingsBtnTag_ScreenShake|SettingsBtnTag_SoundEffects|SettingsBtnTag_TimerDisplay|SettingsBtnTag_TwoLives|SettingsButtonType_Checkbox|SettingsButtonType_Enumeration|SettingsButtonType_GenericSlider|SettingsButtonType_KeyBinding|SettingsButtonType_Label|SettingsButtonType_Navigation|SettingsButtonType_NumTypes|SettingsButtonType_PadBinding|SettingsButtonType_TrueFalse|SettingsButtonType_VolumeSlider|SettingsSubMenu_Accessibility|SettingsSubMenu_Controls|SettingsSubMenu_Gameplay|SettingsSubMenu_Main|SettingsSubMenu_NumMenus|SettingsSubMenu_Visual|ShoeVariant_FireShoes|ShoeVariant_IceSkates|ShoeVariant_JesterShoes|ShoeVariant_LavaBoots|ShoeVariant_NumVariants|ShoeVariant_PegasusBoots|ShoeVariant_PusherShoes|ShoeVariant_SpikeShoes|ShoeVariant_WaterBoots|SolidDecor_AlienPlantClosed|SolidDecor_AlienPlantOpen|SolidDecor_ArmedLog1|SolidDecor_ArmedLog2|SolidDecor_ArmedLog3|SolidDecor_ArmedLog4|SolidDecor_ArmedLog5|SolidDecor_Balance|SolidDecor_Banner1|SolidDecor_Banner2|SolidDecor_Base|SolidDecor_BonsaiTree|SolidDecor_Bookshelf|SolidDecor_Campfire|SolidDecor_ChairLeft|SolidDecor_ChairRight|SolidDecor_Chest|SolidDecor_CoffinBlink|SolidDecor_Column|SolidDecor_CrateLarge|SolidDecor_CrateSmall|SolidDecor_Crystal|SolidDecor_DancingBush|SolidDecor_EgyptianBeetle|SolidDecor_EgyptianEmblem|SolidDecor_EgyptianFish|SolidDecor_EgyptianLantern1|SolidDecor_EgyptianLantern2|SolidDecor_EgyptianPot|SolidDecor_EgyptianSeptre|SolidDecor_EgyptianStatue|SolidDecor_FruitBox|SolidDecor_IceSpikes1|SolidDecor_IceSpikes2|SolidDecor_LargeMushroom|SolidDecor_LargeSnowman|SolidDecor_Mushroom|SolidDecor_NumVariants|SolidDecor_PottedPlant1|SolidDecor_PottedPlant2|SolidDecor_PottedPlant3|SolidDecor_PottedPlant4|SolidDecor_Pumpkin|SolidDecor_Pyramid|SolidDecor_Sign|SolidDecor_Sign10|SolidDecor_Sign11|SolidDecor_Sign2|SolidDecor_Sign3|SolidDecor_Sign4|SolidDecor_Sign5|SolidDecor_Sign6|SolidDecor_Sign7|SolidDecor_Sign8|SolidDecor_Sign9|SolidDecor_SmallPalmTree|SolidDecor_SmallShrine|SolidDecor_SmallSnowmen1|SolidDecor_SmallSnowmen2|SolidDecor_SmallSnowmen3|SolidDecor_SmallTomb|SolidDecor_SmallTree|SolidDecor_SpikyBush|SolidDecor_StatueKnight|SolidDecor_Stool|SolidDecor_Stool2|SolidDecor_Stump1|SolidDecor_Stump2|SolidDecor_Stump3|SolidDecor_Sunflower|SolidDecor_TableCenter|SolidDecor_TableLeft|SolidDecor_TableRight|SolidDecor_TrashBag|SolidDecor_TrashCanClosed|SolidDecor_TrashCanOpen|SolidDecor_Tree1|SolidDecor_Well|SoundTransition_CrossFade|SoundTransition_FadeIn|SoundTransition_FadeOut|SoundTransition_FadeOutFadeIn|SoundTransition_Immediate|SpawnerVariant_Elevator|SpawnerVariant_Invisible|SpawnerVariant_NumVariants|SpawnerVariant_Pipe|SpecialFolder_CustomLevels|SpecialFolder_NumFolders|SpecialFolder_Saves|SpecialFolder_Screenshots|SpecialFolder_Settings|SpikeTrapTriggerType_Activate|SpikeTrapTriggerType_Deactivate|SpikeTrapTriggerType_None|SpikeTrapTriggerType_NumTypes|SpikeTrapTriggerType_Toggle|SrlType_AnimAspect|SrlType_AnimKeyType|SrlType_Bool|SrlType_Dir2|SrlType_Dir2Diag|SrlType_EntityType|SrlType_GameColor|SrlType_GamepadBtn|SrlType_KeyboardBtn|SrlType_NumTypes|SrlType_PaletteColor|SrlType_PickedColor|SrlType_Rec|SrlType_Reci|SrlType_Resource|SrlType_String|SrlType_TileType|SrlType_Type|SrlType_Vec2|SrlType_Vec2i|SrlType_Vec3|SrlType_Vec3i|SrlType_Vec4|SrlType_Vec4i|SrlType_i32|SrlType_r32|SrlType_u16|SrlType_u32|SrlType_u8|StartMenuButton_ChangeName|StartMenuButton_CycleToggle|StartMenuButton_EditChunkSize|StartMenuButton_EditRooms|StartMenuButton_Exit|StartMenuButton_GroupsToggle|StartMenuButton_Help|StartMenuButton_NumButtons|StartMenuButton_Playtest|StartMenuButton_PlaytestFromCursor|StartMenuButton_Save|StartMenuButton_Settings|TAB_WIDTH|TARGET_COLOR_1|TARGET_COLOR_2|TARGET_COLOR_3|TARGET_COLOR_4|TELEPORT_PART_SPAWN_DIST|TEXTURES_FLDR|TEXT_CUTSCENE_TITLE|TEXT_CUTSCENE_TITLE_LENGTH|TEXT_CUTSCENE_VERS_MAJOR|TEXT_CUTSCENE_VERS_MINOR|TEXT_DESIGN_TITLE|TEXT_DESIGN_TITLE_LENGTH|TEXT_DESIGN_VERS_MAJOR|TEXT_DESIGN_VERS_MINOR|TEXT_PACKS_LIST_TITLE|TEXT_PACKS_LIST_TITLE_LENGTH|TEXT_PACKS_LIST_VERS_MAJOR|TEXT_PACKS_LIST_VERS_MINOR|TEXT_SETTINGS_TITLE|TEXT_SETTINGS_TITLE_LENGTH|TEXT_SETTINGS_VERS_MAJOR|TEXT_SETTINGS_VERS_MINOR|TEXT_SOUNDS_META_TITLE|TEXT_SOUNDS_META_TITLE_LENGTH|TEXT_SOUNDS_META_VERS_MAJOR|TEXT_SOUNDS_META_VERS_MINOR|THOUGHT_BUBBLE_OPEN_TIME|THOUGHT_BUBBLE_SHOW_TIME|TILE_SIZE|TIMER_FONT_SIZE|TITLE_BANNER_CLOSE_TIME|TITLE_BANNER_OPEN_TIME|TITLE_BANNER_TEXT_SIZE|TITLE_BANNER_TIME_LONG|TITLE_BANNER_TIME_SHORT|TOGGLE_WALL_CLOSE_TIME|TOGGLE_WALL_OPEN_TIME|TOPMOST_WINDOW|TORCH_FADE_TIME|TORCH_LIGHT_TIME|TRANSIENT_MAX_NUMBER_MARKS|TURRET_SHOOT_TIME|TableDecor_Basket1|TableDecor_Basket2|TableDecor_Bear|TableDecor_Bowl|TableDecor_Candelabra|TableDecor_Candle1|TableDecor_Candle2|TableDecor_Coins1|TableDecor_Coins2|TableDecor_Coins3|TableDecor_CrackedSkull|TableDecor_Duck|TableDecor_FlowerPot|TableDecor_Flowers1|TableDecor_Flowers2|TableDecor_Flowers3|TableDecor_Flowers4|TableDecor_Flowers5|TableDecor_NumVariants|TableDecor_Potion|TableDecor_Scroll|TableDecor_Skull|TableDecor_SmallCandles1|TableDecor_SmallCandles2|TableDecor_SmallCandles3|TableDecor_Teacup1|TableDecor_Teacup2|TableDecor_Teapot|TableVariant_Conveyor|TableVariant_NumVariants|TableVariant_Slab|TableVariant_Stone|TableVariant_Wood1|TableVariant_Wood2|TableVariant_Wood3|TakerTriggerType_Disable|TakerTriggerType_Enable|TakerTriggerType_None|TakerTriggerType_NumTypes|TakerTriggerType_Toggle|TakerVariant_Meta|TakerVariant_NumVariants|TakerVariant_Threshold|TeleporterTriggerType_Activate|TeleporterTriggerType_Deactivate|TeleporterTriggerType_None|TeleporterTriggerType_NumTypes|TeleporterTriggerType_Toggle|TeleporterType_NumTypes|TeleporterType_Receiver|TeleporterType_Sender|TeleporterType_TwoWay|TextId_ComingSoon|TextId_NumIds|TextId_SecretRoom|TextId_Sword|TextId_Test|TextId_Unfinished|Tile_Carpet|Tile_CrackedGround|Tile_CrackedIce|Tile_FloatingIce|Tile_FloatingSlime|Tile_Ground|Tile_Hole|Tile_Ice|Tile_Lava|Tile_LavaFilled|Tile_MetalGround|Tile_Nothing|Tile_Pusher|Tile_SlimeGround|Tile_SlimeWebHole|Tile_Water|Tile_WaterFilled|Tile_WoodGround|TimeUnit_Days|TimeUnit_Hours|TimeUnit_Milliseconds|TimeUnit_Minutes|TimeUnit_Months|TimeUnit_Seconds|TimeUnit_Years|TimerTriggerType_DecreasePeriod|TimerTriggerType_IncreasePeriod|TimerTriggerType_None|TimerTriggerType_NumTypes|TimerTriggerType_Start|TimerTriggerType_Stop|TimerTriggerType_Toggle|ToggleWallTriggerType_Activate|ToggleWallTriggerType_Deactivate|ToggleWallTriggerType_None|ToggleWallTriggerType_NumTypes|ToggleWallTriggerType_Toggle|TorchTriggerType_Activate|TorchTriggerType_Deactivate|TorchTriggerType_None|TorchTriggerType_NumTypes|TorchTriggerType_Toggle|TorchVariant_Animated|TorchVariant_Default|TorchVariant_NumVariants|TorchVariant_Small|TransInfoType_Cutscene|TransInfoType_Multiplayer|TransInfoType_NewsPage|TransInfoType_Nothing|TransInfoType_PackComplete|TransInfoType_SaveGame|TransInfoType_TargetLevelInfo|Transform2_Identity|Transform3_Identity|Transparent|TriggerType_None|TriggerType_NumOptions|TriggerType_OnBoth|TriggerType_OnPress|TriggerType_OnRelease|TurnTrigger_Clockwise|TurnTrigger_Counterclockwise|TurnTrigger_NumOptions|TurnTrigger_Opposite|TurnTrigger_Specific|TurretAnim_Idle|TurretAnim_Shoot|TurretShot_All|TurretShot_Left|TurretShot_LeftRight|TurretShot_None|TurretShot_NumOptions|TurretShot_Right|TurretShot_Up|TurretShot_UpLeft|TurretShot_UpRight|TurretTriggerType_Double|TurretTriggerType_DoubleAngle|TurretTriggerType_None|TurretTriggerType_NumTypes|TurretTriggerType_Quad|TurretTriggerType_Shoot|TurretTriggerType_Single|TurretTriggerType_Start|TurretTriggerType_Stop|TurretTriggerType_Toggle|TurretTriggerType_Triple|UINT16_MAX|UINT32_MAX|UINT64_MAX|UINT8_MAX|USE_ASSERT_FAILURE_FUNCTION|UpdatePass_ActivateThings|UpdatePass_AfterPickup|UpdatePass_EndMovement|UpdatePass_EntityCounters|UpdatePass_Expressions|UpdatePass_FillThings|UpdatePass_InputAndAi|UpdatePass_KillThings|UpdatePass_LightDoors|UpdatePass_MonsterMovement|UpdatePass_NumPasses|UpdatePass_Pickup|UpdatePass_PostMove|UpdatePass_PreMove|UpdatePass_PushRollAndSlide|UpdatePass_ResolveMovement|UpdatePass_Teleport|VIEW_MIN_NUM_BLOCKS|Vec2_Down|Vec2_Half|Vec2_Left|Vec2_One|Vec2_Right|Vec2_Up|Vec2_Zero|Vec2i_Down|Vec2i_Left|Vec2i_One|Vec2i_Right|Vec2i_Up|Vec2i_Zero|Vec3_Back|Vec3_Backward|Vec3_Bottom|Vec3_Down|Vec3_Forward|Vec3_Front|Vec3_Half|Vec3_Left|Vec3_One|Vec3_Right|Vec3_Top|Vec3_Up|Vec3_Zero|Vec3i_Back|Vec3i_Backward|Vec3i_Bottom|Vec3i_Down|Vec3i_Forward|Vec3i_Front|Vec3i_Left|Vec3i_One|Vec3i_Right|Vec3i_Top|Vec3i_Up|Vec3i_Zero|Vec4_Back|Vec4_Backward|Vec4_Bottom|Vec4_Down|Vec4_Forward|Vec4_Front|Vec4_Left|Vec4_One|Vec4_Right|Vec4_Top|Vec4_Up|Vec4_Zero|Vec4i_Back|Vec4i_Backward|Vec4i_Bottom|Vec4i_Down|Vec4i_Forward|Vec4i_Front|Vec4i_Left|Vec4i_One|Vec4i_Right|Vec4i_Top|Vec4i_Up|Vec4i_Zero|VisBlue|VisBlueGray|VisDarkRed|VisDarkYellow|VisGray|VisGreen|VisLightBlue|VisLightBlueGray|VisLightGray|VisLightGreen|VisLightOrange|VisLightPurple|VisLightSeaGreen|VisOrange|VisPurple|VisRed|VisSeaGreen|VisSilver|VisWhite|VisYellow|WALL_COLOR_DARK|WALL_COLOR_LIGHT|WALL_COLOR_PRIMARY|WARNING_OUTPUT_ENABLED|WAV_ChunkID_RIFF|WAV_ChunkID_WAVE|WAV_ChunkID_data|WAV_ChunkID_fmt|WIN32_EXE_ICON_ID|WINDOWS_COMPILATION|WINDOW_CLASS_NAME|WINDOW_HEIGHT|WINDOW_SWAP_INTERVAL|WINDOW_TITLE|WINDOW_WIDTH|WIPE_SPEED|WOOD_COLOR_DARK|WOOD_COLOR_LIGHT|WOOD_COLOR_PRIMARY|WOOD_COLOR_SECONDARY|WallButtonTriggerType_None|WallButtonTriggerType_NumTypes|WallButtonTriggerType_OnActivate|WallButtonTriggerType_OnBoth|WallButtonTriggerType_OnDeactivate|WallButtonVariant_Default|WallButtonVariant_NumVariants|WallButtonVariant_Outlet|WallButtonVariant_Target|WallButtonVariant_Torch|WallPlaceType_Default|WallPlaceType_Hidden|WallPlaceType_NumTypes|WallPlaceType_Toggle|WallVariant_Bezel|WallVariant_Brick|WallVariant_Cobble|WallVariant_CobbleFlat|WallVariant_Default|WallVariant_Dirt|WallVariant_Fence|WallVariant_Foliage|WallVariant_Hedge|WallVariant_Hint|WallVariant_Invisible|WallVariant_Magic1|WallVariant_Magic2|WallVariant_Magic3|WallVariant_Magic4|WallVariant_NumVariants|WallVariant_Palisade|WallVariant_PalisadeFlat|WallVariant_ReallyRounded|WallVariant_Rocky|WallVariant_RockyRounded|WallVariant_Roots|WallVariant_RootsFlat|WallVariant_Rounded|WallVariant_Royal|WallVariant_SlightlyRounded|WallVariant_Sloped|WallVariant_SlopedBrick|WallVariant_SmoothRock|WallVariant_Toggle|WallVariant_Vines1|WallVariant_Wood1|WaterFilled_Barrel1|WaterFilled_Barrel2|WaterFilled_Boulder|WaterFilled_Box|WaterFilled_NumVariants|White|__VA_ARGS__'
  custom_globals: 'DEF_DRAW_PLAYER_QUEUE|ElapsedMs|GL_PlatformInfo|LocalTime|PlatformVersion|ProgramTime|RenderMousePos|RenderMouseStartPos|RenderScreenSize|SettingsSubMenu_GamepadControls|SettingsSubMenu_KeyboardControls|SrlType_AnimAspect|SrlType_AnimKeyType|SrlType_Bool|SrlType_Direction|SrlType_EntityType|SrlType_GameColor|SrlType_GamepadBtn|SrlType_KeyboardBtn|SrlType_PaletteColor|SrlType_TileType|SrlType_i32|SrlType_r32|SrlType_u16|SrlType_u32|SrlType_u8|SystemTime|TORCH_FADE_TIME|TORCH_LIGHT_TIME|TempArena|TorchTriggerType_Activate|TorchTriggerType_Deactivate|TorchTriggerType_None|TorchTriggerType_NumTypes|TorchTriggerType_Toggle|app|appInput|appOutput|credits|cut|devMenu|editor|entityMeta|game|giffer|input|intro|mainHeap|mainMenu|mess|multi|newsPage|platform|plt|progressMenu|rc|resources|sett|settingsMenu|soundsList|staticHeap'
  declspec: '__declspec\(\s*\w+(?:\([^)]+\))?\s*\)'
  storage_classes: 'static|extern|register|{{declspec}}'
  type_qualifier: 'const|volatile'
  compiler_directive: 'inline|restrict|__restrict__|__restrict'
  modifiers: '{{storage_classes}}|{{type_qualifier}}|{{compiler_directive}}'
  non_func_keywords: 'decltype|sizeof|__declspec|__attribute__'

contexts:
  main:
    - include: preprocessor-global
    - include: global

  #############################################################################
  # Reusable contexts
  #
  # The follow contexts are currently constructed to be reused in the C++
  # syntax. They are specifically constructed to not push into sub-contexts,
  # which ensures that C++ code isn't accidentally lexed as plain C. They also
  # should not use the {{identifier}} variable since that is different for C++.
  #############################################################################

  comments:
    - match: ^/\* =(\s*.*?)\s*= \*/$\n?
      scope: comment.block.c
      captures:
        1: meta.toc-list.banner.block.c
    - match: /\*
      scope: punctuation.definition.comment.c
      push:
        - meta_scope: comment.block.c
        - match: '\@[A-Za-z0-9_]*'
          scope: custom.thing.c
        - match: '\*\*[^\n\*\/]*\*{0,2}[^\/\*]'
          scope: custom.string.c
        - match: '^\s*([A-Za-z0-9_ ]+)\:\s*([^\n]*)'
          captures: 
            1: custom.identifier.documentation.c
            2: entity.name.function-documentation.c
        - match: '^\s*(-\s?[A-Za-z0-9_]+\:?)([^\n\*]*)'
          captures: 
            1: support.type.documentation.c
            2: custom.thing.documentation.c
        - match: \*/
          scope: punctuation.definition.comment.c
          pop: true
    - match: \*/(?!\*)
      scope: invalid.illegal.stray-comment-end.c
    - match: ^// =(\s*.*?)\s*=\s*$\n?
      scope: comment.line.banner.c
      captures:
        1: meta.toc-list.banner.line.c
    - match: //
      scope: punctuation.definition.comment.c
      push:
        - meta_scope: comment.line.double-slash.c
        - match: '(\\)$\n'
          captures:
            1: punctuation.separator.continuation.c
        - match: '\*\*[^\n\*]*\*{0,2}'
          scope: custom.string.c
        - match: '\@[A-Za-z0-9_]*'
          scope: custom.thing.c
        - match: '[\+\-\=]{3,}'
          scope: custom.string.c
        - match: '\| +((?:[^\s\|]+\s?){1,}) +\|$'
          scope: custom.string.c
          captures:
            1: entity.name.function.header.c
        - match: \n
          pop: true

  strings:
    - match: '(L|u8|u|U)?(")'
      captures:
        1: storage.type.string.c
        2: punctuation.definition.string.begin.c
      push:
        - meta_scope: string.quoted.double.c
        - match: '"'
          scope: punctuation.definition.string.end.c
          pop: true
        - include: string_escaped_char
        - include: string_placeholder
    - match: "(L|u8|u|U)?(')"
      captures:
        1: storage.type.string.c
        2: punctuation.definition.string.begin.c
      push:
        - meta_scope: string.quoted.single.c
        - match: "'"
          scope: punctuation.definition.string.end.c
          pop: true
        - include: string_escaped_char

  string_escaped_char:
    - match: '(\\)$\n'
      captures:
        1: punctuation.separator.continuation.c
    - match: \\(?:\\|[abefnrtv\'"?]|[0-3][0-9]{0,2}|[4-7][0-9]?|x[a-fA-F0-9]+|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{8})
      scope: constant.character.escape.c
    - match: \\.
      scope: invalid.illegal.unknown-escape.c

  string_placeholder:
    - match: |-
        (?x)%
          (\d+\$)?                                      # field (argument #)
          [#0\- +']*                                    # flags
          [,;:_]?                                       # separator character (AltiVec)
          ((-?\d+)|\*(-?\d+\$)?)?                       # minimum field width
          (\.((-?\d+)|\*(-?\d+\$)?)?)?                  # precision
          (hh|h|ll|l|j|t|z|q|L|vh|vl|v|hv|hl)?          # length modifier
          (\[[^\]]+\]|[am]s|[diouxXDOUeEfFgGaACcSspn%]) # conversion type
      scope: constant.other.placeholder.c
    - match: "%"
      scope: invalid.illegal.placeholder.c

  keywords:
    - match: \b({{control_keywords}})\b
      scope: keyword.control.c
    - match: \bsizeof\b
      scope: keyword.operator.word.c

  modifiers:
    - match: \b({{modifiers}})\b
      scope: storage.modifier.c

  variables:
    - match: '\bg[A-Z]\w*\b'
      scope: variable.other.readwrite.global.mac-classic.c
    - match: '\bs[A-Z]\w*\b'
      scope: variable.other.readwrite.static.mac-classic.c

  constants:
    - match: \b(__func__|NULL|true|false|TRUE|FALSE|nullptr)\b
      scope: constant.language.c
    - match: \b({{custom_constants}})\b
      scope: custom.constant.c
    - match: \b(__FILE__|__FUNCTION__|__LINE__)\b
      scope: support.constant.c
    # PIC GPIO Registers
    - match: \b(TRIS[A-Z](?:bits)?(?:\s*\.\s*TRIS[A-Z][0-9]{1,2}){0,1})\b
      scope: custom.global.c
    - match: \b(PORT[A-Z](?:bits)?(?:\s*\.\s*R[A-Z][0-9]{1,2}){0,1})\b
      scope: custom.global.c
    - match: \b(LAT[A-Z](?:bits)?(?:\s*\.\s*LAT[A-Z][0-9]{1,2}){0,1})\b
      scope: custom.global.c
    - match: \b(ANSEL[A-Z](?:bits)?(?:\s*\.\s*ANS[A-Z][0-9]{1,2}){0,1})\b
      scope: custom.global.c
    - match: \b(CNPU[A-Z](?:bits)?(?:\s*\.\s*CNPU[A-Z][0-9]{1,2}){0,1})\b
      scope: custom.global.c
    - match: \b(CNPD[A-Z](?:bits)?(?:\s*\.\s*CNPD[A-Z][0-9]{1,2}){0,1})\b
      scope: custom.global.c
    - match: \b(ODC[A-Z](?:bits)?(?:\s*\.\s*ODC[A-Z][0-9]{1,2}){0,1})\b
      scope: custom.global.c
    - match: \b(CNF[A-Z](?:bits)?(?:\s*\.\s*CNF[A-Z][0-9]{1,2}){0,1})\b
      scope: custom.global.c
    - match: \b(CNEN[A-Z](?:bits)?(?:\s*\.\s*CNIE[A-Z][0-9]{1,2}){0,1})\b
      scope: custom.global.c
    - match: \b(CNNE[A-Z](?:bits)?(?:\s*\.\s*CNNE[A-Z][0-9]{1,2}){0,1})\b
      scope: custom.global.c
    - match: \b(IPC[0-9]{1,2}(?:bits)?(?:\s*\.\s*[A-Z0-9]*I(P|S)){0,1})\b
      scope: custom.global.c
    - match: \b(IEC[0-9]{1,2}(?:bits)?(?:\s*\.\s*[A-Z0-9]*IE){0,1})\b
      scope: custom.global.c
    - match: \b(IFS[0-9]{1,2}(?:bits)?(?:\s*\.\s*[A-Z0-9]*IF){0,1})\b
      scope: custom.global.c
    - match: \b(RPOR[0-9]{1,2}(?:bits)?(?:\s*\.\s*RP[0-9]{1,2}R){0,1})\b
      scope: custom.global.c
    - match: \b(RPINR[0-9]{1,2}(?:bits)?(?:\s*\.\s*[A-Z0-9]+R){0,1})\b
      scope: custom.global.c
    - match: \b(RP[A-Z][0-9]{1,2}R(?:bits)?(?:\s*\.\s*RP[A-Z][0-9]{1,2}R){0,1})\b
      scope: custom.global.c
    - match: \b(U[0-9]MODE(?:bits)?(?:\s*\.\s*[A-Z0-9]*){0,1})\b
      scope: custom.global.c
    - match: \b(U[0-9]STA(?:bits)?(?:\s*\.\s*[A-Z0-9]*){0,1})\b
      scope: custom.global.c
    - match: \b(U[0-9]BRG(?:bits)?(?:\s*\.\s*[A-Z0-9]*){0,1})\b
      scope: custom.global.c
    - match: \b(SPI[0-9]CON[0-9]?(?:bits)?(?:\s*\.\s*[A-Z0-9]*){0,1})\b
      scope: custom.global.c
    - match: \b(SPI[0-9]STAT(?:bits)?(?:\s*\.\s*[A-Z0-9]*){0,1})\b
      scope: custom.global.c
    - match: \b(SPI[0-9]BRG(?:bits)?(?:\s*\.\s*[A-Z0-9]*){0,1})\b
      scope: custom.global.c
    - match: \b(SPI[0-9]BUF(?:bits)?(?:\s*\.\s*[A-Z0-9]*){0,1})\b
      scope: custom.global.c
    - match: \b(_[A-Za-z0-9_]*_POSITION)\b
      scope: custom.global.c
    - match: \b(_[A-Za-z0-9_]*_MASK)\b
      scope: custom.global.c
    - match: \b(_[A-Za-z0-9_]*_LENGTH)\b
      scope: custom.global.c
    # common C constant naming idiom -- kConstantVariable
    - match: '\bk[A-Z]\w*\b'
      scope: constant.other.variable.mac-classic.c
    - match: \b(noErr|kNilOptions|kInvalidID|kVariableLengthArray)\b
      scope: support.constant.mac-classic.c

  c99:
    - match: \b(hypot(f|l)?|s(scanf|ystem|nprintf|ca(nf|lb(n(f|l)?|ln(f|l)?))|i(n(h(f|l)?|f|l)?|gn(al|bit))|tr(s(tr|pn)|nc(py|at|mp)|c(spn|hr|oll|py|at|mp)|to(imax|d|u(l(l)?|max)|k|f|l(d|l)?)|error|pbrk|ftime|len|rchr|xfrm)|printf|et(jmp|vbuf|locale|buf)|qrt(f|l)?|w(scanf|printf)|rand)|n(e(arbyint(f|l)?|xt(toward(f|l)?|after(f|l)?))|an(f|l)?)|c(s(in(h(f|l)?|f|l)?|qrt(f|l)?)|cos(h(f)?|f|l)?|imag(f|l)?|t(ime|an(h(f|l)?|f|l)?)|o(s(h(f|l)?|f|l)?|nj(f|l)?|pysign(f|l)?)|p(ow(f|l)?|roj(f|l)?)|e(il(f|l)?|xp(f|l)?)|l(o(ck|g(f|l)?)|earerr)|a(sin(h(f|l)?|f|l)?|cos(h(f|l)?|f|l)?|tan(h(f|l)?|f|l)?|lloc|rg(f|l)?|bs(f|l)?)|real(f|l)?|brt(f|l)?)|t(ime|o(upper|lower)|an(h(f|l)?|f|l)?|runc(f|l)?|gamma(f|l)?|mp(nam|file))|i(s(space|n(ormal|an)|cntrl|inf|digit|u(nordered|pper)|p(unct|rint)|finite|w(space|c(ntrl|type)|digit|upper|p(unct|rint)|lower|al(num|pha)|graph|xdigit|blank)|l(ower|ess(equal|greater)?)|al(num|pha)|gr(eater(equal)?|aph)|xdigit|blank)|logb(f|l)?|max(div|abs))|di(v|fftime)|_Exit|unget(c|wc)|p(ow(f|l)?|ut(s|c(har)?|wc(har)?)|error|rintf)|e(rf(c(f|l)?|f|l)?|x(it|p(2(f|l)?|f|l|m1(f|l)?)?))|v(s(scanf|nprintf|canf|printf|w(scanf|printf))|printf|f(scanf|printf|w(scanf|printf))|w(scanf|printf)|a_(start|copy|end|arg))|qsort|f(s(canf|e(tpos|ek))|close|tell|open|dim(f|l)?|p(classify|ut(s|c|w(s|c))|rintf)|e(holdexcept|set(e(nv|xceptflag)|round)|clearexcept|testexcept|of|updateenv|r(aiseexcept|ror)|get(e(nv|xceptflag)|round))|flush|w(scanf|ide|printf|rite)|loor(f|l)?|abs(f|l)?|get(s|c|pos|w(s|c))|re(open|e|ad|xp(f|l)?)|m(in(f|l)?|od(f|l)?|a(f|l|x(f|l)?)?))|l(d(iv|exp(f|l)?)|o(ngjmp|cal(time|econv)|g(1(p(f|l)?|0(f|l)?)|2(f|l)?|f|l|b(f|l)?)?)|abs|l(div|abs|r(int(f|l)?|ound(f|l)?))|r(int(f|l)?|ound(f|l)?)|gamma(f|l)?)|w(scanf|c(s(s(tr|pn)|nc(py|at|mp)|c(spn|hr|oll|py|at|mp)|to(imax|d|u(l(l)?|max)|k|f|l(d|l)?|mbs)|pbrk|ftime|len|r(chr|tombs)|xfrm)|to(b|mb)|rtomb)|printf|mem(set|c(hr|py|mp)|move))|a(s(sert|ctime|in(h(f|l)?|f|l)?)|cos(h(f|l)?|f|l)?|t(o(i|f|l(l)?)|exit|an(h(f|l)?|2(f|l)?|f|l)?)|b(s|ort))|g(et(s|c(har)?|env|wc(har)?)|mtime)|r(int(f|l)?|ound(f|l)?|e(name|alloc|wind|m(ove|quo(f|l)?|ainder(f|l)?))|a(nd|ise))|b(search|towc)|m(odf(f|l)?|em(set|c(hr|py|mp)|move)|ktime|alloc|b(s(init|towcs|rtowcs)|towc|len|r(towc|len))))\b
      scope: support.function.C99.c

  types:
    - match: \b({{basic_types}}|{{before_tag}})\b
      scope: storage.type.c
    - match: \b(u_char|u_short|u_int|u_long|ushort|uint|u_quad_t|quad_t|qaddr_t|caddr_t|daddr_t|dev_t|fixpt_t|blkcnt_t|blksize_t|gid_t|in_addr_t|in_port_t|ino_t|key_t|mode_t|nlink_t|id_t|pid_t|off_t|segsz_t|swblk_t|uid_t|id_t|clock_t|size_t|ssize_t|time_t|useconds_t|suseconds_t|ptrdiff_t)\b
      scope: support.type.sys-types.c
    - match: \b(pthread_attr_t|pthread_cond_t|pthread_condattr_t|pthread_mutex_t|pthread_mutexattr_t|pthread_once_t|pthread_rwlock_t|pthread_rwlockattr_t|pthread_t|pthread_key_t)\b
      scope: support.type.pthread.c
    - match: \b({{stdint}})\b
      scope: support.type.stdint.c
    - match: \b({{custom_types}})\b
      scope: custom.type.c
    - match: \b({{custom_globals}})\b
      scope: custom.global.c
    - match: '\b({{microsoft_types}})\b'
      scope: support.type.microsoft.c
    - match: '\b({{windows_types}})\b'
      scope: support.type.windows.c
    - match: \b(AbsoluteTime|Boolean|Byte|ByteCount|ByteOffset|BytePtr|CompTimeValue|ConstLogicalAddress|ConstStrFileNameParam|ConstStringPtr|Duration|Fixed|FixedPtr|Float32|Float32Point|Float64|Float80|Float96|FourCharCode|Fract|FractPtr|Handle|ItemCount|LogicalAddress|OptionBits|OSErr|OSStatus|OSType|OSTypePtr|PhysicalAddress|ProcessSerialNumber|ProcessSerialNumberPtr|ProcHandle|Ptr|ResType|ResTypePtr|ShortFixed|ShortFixedPtr|SignedByte|SInt16|SInt32|SInt64|SInt8|Size|StrFileName|StringHandle|StringPtr|TimeBase|TimeRecord|TimeScale|TimeValue|TimeValue64|UInt16|UInt32|UInt64|UInt8|UniChar|UniCharCount|UniCharCountPtr|UniCharPtr|UnicodeScalarValue|UniversalProcHandle|UniversalProcPtr|UnsignedFixed|UnsignedFixedPtr|UnsignedWide|UTF16Char|UTF32Char|UTF8Char)\b
      scope: support.type.mac-classic.c

  numbers:
    - match: '\b((0(x|X)[0-9a-fA-F]*(\.[0-9a-fA-F]+p-?\d+)?)|(0(b|B)[01]+)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\b'
      scope: constant.numeric.c

  operators:
    - match: '->'
      scope: punctuation.accessor.c
    - match: \+\=|-\=|\*\=|/\=|%\=|&\=|\|\=|\^\=|>>\=|<<\=
      scope: keyword.operator.assignment.augmented.c
    - match: \+|\-|/|%|<<|>>|&&|\|\||\||\^|~|!
      scope: keyword.operator.arithmetic.c
    - match: <\=|>\=|\=\=|<|>|\!\=
      scope: keyword.operator.comparison.c
    # These two operator can be both arithmetic and pointer/address related
    - match: \*|&
      scope: keyword.operator.c
    - match: \=
      scope: keyword.operator.assignment.c
    # Negative lookahead prevents match :: when included in C++
    - match: '\?|:(?!:)'
      scope: keyword.operator.ternary.c
    - match: '\.\.\.'
      scope: keyword.operator.variadic.c

  access:
    - match: '(\.)({{identifier}})(?!\s*\()'
      captures:
        1: punctuation.accessor.c
        2: variable.other.member.c

  label:
    - match: '^\s*((?!default){{identifier}})(:)(?!:)'
      captures:
        1: entity.name.label.c
        2: punctuation.separator.c

  preprocessor-disabled:
    - match: ^\s*(#\s*if(n?def)?)\b
      captures:
        1: meta.preprocessor.c
      push:
        - match: ^\s*(#\s*endif)\b
          captures:
            1: meta.preprocessor.c
          pop: true
        - include: preprocessor-disabled
        - include: pragma-mark
    - include: pragma-mark

  preprocessor-line-continuation:
    - match: '(\\)$\n'
      captures:
        1: punctuation.separator.continuation.c
    - match: \\(\s+?)$
      captures:
        1: invalid.illegal.space-after-continuation.c

  preprocessor-line-ending:
    - match: $\n
      pop: true

  # Comment handling in preprocessor directives are complicated by the fact
  # that a single-line comment will normally consume the newline to prevent
  # completions from being presented to the user. Additionally, a multi-line
  # comment without a line continuation ends at the newline.
  preprocessor-comments:
    - match: /\*
      scope: punctuation.definition.comment.c
      push:
        - meta_scope: comment.block.c
        - match: '\\$\n'
          scope: punctuation.separator.continuation.c
        - match: \*/
          scope: punctuation.definition.comment.c
          pop: true
    - match: //
      scope: punctuation.definition.comment.c
      push:
        - meta_scope: comment.line.double-slash.c
        - match: '(\\)$\n'
          captures:
            1: punctuation.separator.continuation.c
          pop: true
        - match: (?=\n)
          pop: true

  pragma-mark:
    - match: ^\s*((#\s*pragma\s+mark)\s+(.*))
      scope: meta.section.c
      captures:
        1: meta.preprocessor.c
        2: keyword.control.import.pragma.c
        3: meta.toc-list.pragma-mark.c

  # Used by "inc" snippets to prevent double ##include
  incomplete-inc:
    - match: '^\s*(#i(nc?)?)\b\s*'
      scope: meta.preprocessor.incomplete.c

  #############################################################################
  # The following are C-specific scopes that should not be reused. This is
  # because they push into subcontexts and use variables that are C-specific.
  #############################################################################

  global:
    - include: early-expressions
    - match: '^\s*(?=\w+)'
      push: global-modifier
    - include: late-expressions

  statements:
    - include: preprocessor-statements
    - include: label
    - include: expressions

  expressions:
    - include: early-expressions
    - include: late-expressions

  early-expressions:
    - include: preprocessor-expressions
    - include: comments
    - include: case-default
    - include: access
    - include: typedef
    - include: keywords-parens
    - include: keywords
    - include: numbers
    - include: operators
    - include: strings
    - include: parens
    - include: brackets
    - include: block
    - include: variables
    - include: constants
    - match: ','
      scope: punctuation.separator.c
    - match: '\)|\}'
      scope: invalid.illegal.stray-bracket-end.c

  late-expressions:
    - include: modifiers-parens
    - include: modifiers
    - include: types
    - include: function-call
    - match: ';'
      scope: punctuation.terminator.c

  ## C-specific contexts

  global-modifier:
    - include: comments
    - include: modifiers-parens
    - include: modifiers
    - match: '(?=\S)'
      set: global-type

  global-type:
    - include: comments
    - match: \*
      scope: keyword.operator.c
    # If a struct/union/enum followed by a name that is not a macro or declspec
    # then this is likely a return type of a function. This is uncommon.
    - match: |-
        (?x:
          ({{before_tag}})
          \s+
          (?=
            (?![[:upper:][:digit:]_]+\b|__declspec)
            {{identifier}}
            (\s+{{identifier}}|\s*\*+)
          )
        )
      captures:
        1: storage.type.c
      set: global-maybe-function
    # The previous match handles return types of struct/enum/etc from a func,
    # there this one exits the context to allow matching an actual struct/union
    - match: '(?=\b({{before_tag}})\b)'
      set: data-structures
    - match: '(?=\b({{control_keywords}})\b)'
      pop: true
    - match: '(?=\s)'
      set: global-maybe-function
    # Allow a macro call
    - match: '({{identifier}})\s*(\()(?=[^\)]+\))'
      captures:
        1: variable.function.c
        2: meta.group.c punctuation.section.group.begin.c
      push:
        - meta_scope: meta.function-call.c
        - meta_content_scope: meta.group.c
        - match: '\)'
          scope: meta.group.c punctuation.section.group.end.c
          pop: true
        - include: expressions
    - match: (?={{identifier}}\s*\()
      set:
        - include: function-call
        - match: ''
          pop: true
    - include: types
    - match: '{{identifier}}'
    - match: (?=\W)
      pop: true

  global-maybe-function:
    - include: comments
    # Consume pointer info, macros and any type info that was offset by macros
    - match: \*
      scope: keyword.operator.c
    - include: types
    - include: modifiers-parens
    - include: modifiers
    # All uppercase identifier just before a newline is most likely a macro
    - match: '[[:upper:][:digit:]_]+\s*$'
    # Identifier that is not the function name - likely a macro
    - match: '{{identifier}}(?!\s*(\(|$))(?=\s+)'
    # Real function definition
    - match: '{{identifier}}(?=\s*(\(|$))'
      scope: meta.function.c entity.name.function.c
      set: function-definition-params
    - match: '(?=\S)'
      pop: true

  function-definition-params:
    - meta_content_scope: meta.function.c
    - include: comments
    - match: '(?=\()'
      set:
        - match: \(
          scope: meta.function.parameters.c meta.group.c punctuation.section.group.begin.c
          set:
            - meta_content_scope: meta.function.parameters.c meta.group.c
            - match : \)
              scope: punctuation.section.group.end.c
              set: function-definition-continue
            - match: '\bvoid\b'
              scope: storage.type.c
            - match: '{{identifier}}(?=\s*(\[|,|\)))'
              scope: variable.parameter.c
            - include: expressions
    - match: (?=\S)
      pop: true

  function-definition-continue:
    - meta_content_scope: meta.function.c
    - include: comments
    - match: '(?=;)'
      pop: true
    - match: \b(const|final|noexcept|override)\b
      scope: storage.modifier.c
    - match: '(?=\{)'
      set: function-definition-body
    - match: '(?=\S)'
      pop: true

  function-definition-body:
    - meta_content_scope: meta.function.c
    - match: '\{'
      scope: meta.block.c punctuation.section.block.begin.c
      set:
        - meta_content_scope: meta.function.c meta.block.c
        - match: '\}'
          scope: meta.function.c meta.block.c punctuation.section.block.end.c
          pop: true
        - match: (?=^\s*#\s*(elif|else|endif)\b)
          pop: true
        - match: '(?=({{before_tag}})([^(;]+$|.*\{))'
          push: data-structures
        - include: statements

  data-structures:
    - match: '\bstruct\b'
      scope: storage.type.c
      set: data-structures-struct-definition
    - match: '\benum\b'
      scope: storage.type.c
      set: data-structures-enum-definition
    - match: '\bunion\b'
      scope: storage.type.c
      set: data-structures-union-definition
    - match: '(?=\S)'
      pop: true

  data-structures-struct-definition:
    - meta_scope: meta.struct.c
    - include: data-structures-definition-common-begin
    - match: '{{identifier}}(?=\s*;)'
      scope: entity.name.struct.forward-decl.c
    - match: '{{identifier}}'
      scope: entity.name.struct.c
    - match: '(?=;)'
      pop: true
    - match: '\{'
      scope: meta.block.c punctuation.section.block.begin.c
      set:
        - meta_content_scope: meta.struct.c meta.block.c
        - match: '\}'
          scope: meta.struct.c meta.block.c punctuation.section.block.end.c
          pop: true
        - include: data-structures-body

  data-structures-enum-definition:
    - meta_scope: meta.enum.c
    - include: data-structures-definition-common-begin
    - match: '{{identifier}}(?=\s*;)'
      scope: entity.name.enum.forward-decl.c
    - match: '{{identifier}}'
      scope: entity.name.enum.c
    - match: '(?=;)'
      pop: true
    - match: '\{'
      scope: meta.block.c punctuation.section.block.begin.c
      set:
        - meta_content_scope: meta.enum.c meta.block.c
        # Enums don't support methods so we have a simplified body
        - match: '\}'
          scope: meta.enum.c meta.block.c punctuation.section.block.end.c
          pop: true
        - include: data-structures-body

  data-structures-union-definition:
    - meta_scope: meta.union.c
    - include: data-structures-definition-common-begin
    - match: '{{identifier}}(?=\s*;)'
      scope: entity.name.union.forward-decl.c
    - match: '{{identifier}}'
      scope: entity.name.union.c
    - match: '(?=;)'
      pop: true
    - match: '\{'
      scope: meta.block.c punctuation.section.block.begin.c
      set:
        - meta_content_scope: meta.union.c meta.block.c
        - match: '\}'
          scope: meta.union.c meta.block.c punctuation.section.block.end.c
          pop: true
        - include: data-structures-body

  data-structures-definition-common-begin:
    - include: comments
    - include: modifiers-parens
    - include: modifiers
    # Handle macros so they aren't matched as the class name
    - match: '\b[[:upper:][:digit:]_]+\b'

  data-structures-definition-common-end:
    - match: '(?=;)'
      pop: true

  data-structures-body:
    - include: preprocessor-data-structures
    - match: '(?={{before_tag}})'
      push: data-structures
    - include: expressions

  block:
    - match: '\{'
      scope: punctuation.section.block.begin.c
      push:
        - meta_scope: meta.block.c
        - match: (?=^\s*#\s*(elif|else|endif)\b)
          pop: true
        - match: '\}'
          scope: punctuation.section.block.end.c
          pop: true
        - include: statements

  parens:
    - match: \(
      scope: punctuation.section.group.begin.c
      push:
        - meta_scope: meta.group.c
        - match: \)
          scope: punctuation.section.group.end.c
          pop: true
        - include: expressions

  brackets:
    - match: \[
      scope: punctuation.section.brackets.begin.c
      push:
        - meta_scope: meta.brackets.c
        - match: \]
          scope: punctuation.section.brackets.end.c
          pop: true
        - include: expressions

  case-default:
    - match: '\b(default|case)\b'
      scope: keyword.control.c
      push:
        - match: ':'
          scope: punctuation.separator.c
          pop: true
        - include: expressions

  modifiers-parens:
    - match: \b(__attribute__)\s*(\(\()
      captures:
        1: storage.modifier.c
        2: meta.group.c punctuation.section.group.begin.c
      push :
        - meta_scope: meta.attribute.c
        - meta_content_scope: meta.group.c
        - include: parens
        - include: strings
        - match: \)\)
          scope: meta.group.c punctuation.section.group.end.c
          pop: true
    - match: \b(__declspec)(\()
      captures:
        1: storage.modifier.c
        2: meta.group.c punctuation.section.group.begin.c
      push:
        - meta_content_scope: meta.group.c
        - match: '\)'
          scope: meta.group.c punctuation.section.group.end.c
          pop: true
        - match: '\b(align|allocate|code_seg|property|uuid)\b\s*(\()'
          captures:
            1: storage.modifier.c
            2: meta.group.c punctuation.section.group.begin.c
          push:
            - meta_content_scope: meta.group.c
            - match: '\)'
              scope: meta.group.c punctuation.section.group.end.c
              pop: true
            - include: numbers
            - include: strings
            - match: \b(get|put)\b
              scope: variable.parameter.c
            - match: ','
              scope: punctuation.separator.c
            - match: '='
              scope: keyword.operator.assignment.c
        - match: '\b(appdomain|deprecated|dllimport|dllexport|jintrinsic|naked|noalias|noinline|noreturn|nothrow|novtable|process|restrict|safebuffers|selectany|thread)\b'
          scope: constant.other.c

  keywords-parens:
    - match: '\b(sizeof)\b\s*(\()'
      captures:
        1: keyword.operator.word.c
        2: meta.group.c punctuation.section.group.begin.c
      push:
        - meta_content_scope: meta.group.c
        - match: '\)'
          scope: meta.group.c punctuation.section.group.end.c
          pop: true
        - include: expressions

  typedef:
    - match: \btypedef\b
      scope: storage.type.c
      push:
        - match: ({{identifier}})?\s*(?=;)
          captures:
            1: entity.name.type.typedef.c
          pop: true
        - match: \b(struct)\s+({{identifier}})
          captures:
            1: storage.type.c
        - include: expressions

  function-call:
    - match: (?={{identifier}}\s*\()
      push:
        - meta_content_scope: meta.function-call.c
        - include: c99
        - match: '{{identifier}}'
          scope: variable.function.c
        - match: '\('
          scope: meta.group.c punctuation.section.group.begin.c
          set:
            - meta_content_scope: meta.function-call.c meta.group.c
            - match : \)
              scope: meta.function-call.c meta.group.c punctuation.section.group.end.c
              pop: true
            - include: expressions

  ## Preprocessor for data-structures

  preprocessor-data-structures:
    - include: preprocessor-rule-enabled-data-structures
    - include: preprocessor-rule-disabled-data-structures

  preprocessor-rule-disabled-data-structures:
    - match: ^\s*((#if)\s+(0))\b
      captures:
        1: meta.preprocessor.c
        2: keyword.control.import.c
        3: constant.numeric.preprocessor.c
      push:
        - match: ^\s*(#\s*endif)\b
          captures:
            1: meta.preprocessor.c keyword.control.import.c
          pop: true
        - match: ^\s*(#\s*else)\b
          captures:
            1: meta.preprocessor.c keyword.control.import.else.c
          push:
            - match: (?=^\s*#\s*endif\b)
              pop: true
            - include: negated-block
            - include: data-structures-body
        - match: ""
          push:
            - meta_scope: comment.block.preprocessor.if-branch.c
            - match: (?=^\s*#\s*(else|endif)\b)
              pop: true
            - include: preprocessor-disabled

  preprocessor-rule-enabled-data-structures:
    - match: ^\s*((#if)\s+(0*1))\b
      captures:
        1: meta.preprocessor.c
        2: keyword.control.import.c
        3: constant.numeric.preprocessor.c
      push:
        - match: ^\s*(#\s*endif)\b
          captures:
            1: meta.preprocessor.c keyword.control.import.c
          pop: true
        - match: ^\s*(#\s*else)\b
          captures:
            1: meta.preprocessor.c keyword.control.import.else.c
          push:
            - meta_content_scope: comment.block.preprocessor.else-branch.c
            - match: (?=^\s*#\s*endif\b)
              pop: true
            - include: preprocessor-disabled
        - match: ""
          push:
            - match: (?=^\s*#\s*(else|endif)\b)
              pop: true
            - include: negated-block
            - include: data-structures-body

  ## Preprocessor for global

  preprocessor-global:
    - include: preprocessor-rule-enabled-global
    - include: preprocessor-rule-disabled-global
    - include: preprocessor-rule-other-global

  preprocessor-statements:
    - include: preprocessor-rule-enabled-statements
    - include: preprocessor-rule-disabled-statements
    - include: preprocessor-rule-other-statements

  preprocessor-expressions:
    - include: incomplete-inc
    - include: preprocessor-macro-define
    - include: pragma-mark
    - include: preprocessor-other

  preprocessor-rule-disabled-global:
    - match: ^\s*((#if)\s+(0))\b
      captures:
        1: meta.preprocessor.c
        2: keyword.control.import.c
        3: constant.numeric.preprocessor.c
      push:
        - match: ^\s*(#\s*endif)\b
          captures:
            1: meta.preprocessor.c keyword.control.import.c
          pop: true
        - match: ^\s*(#\s*else)\b
          captures:
            1: meta.preprocessor.c keyword.control.import.else.c
          push:
            - match: (?=^\s*#\s*endif\b)
              pop: true
            - include: preprocessor-global
            - include: negated-block
            - include: global
        - match: ""
          push:
            - meta_scope: comment.block.preprocessor.if-branch.c
            - match: (?=^\s*#\s*(else|endif)\b)
              pop: true
            - include: preprocessor-disabled

  preprocessor-rule-enabled-global:
    - match: ^\s*((#if)\s+(0*1))\b
      captures:
        1: meta.preprocessor.c
        2: keyword.control.import.c
        3: constant.numeric.preprocessor.c
      push:
        - match: ^\s*(#\s*endif)\b
          captures:
            1: meta.preprocessor.c keyword.control.import.c
          pop: true
        - match: ^\s*(#\s*else)\b
          captures:
            1: meta.preprocessor.c keyword.control.import.else.c
          push:
            - meta_content_scope: comment.block.preprocessor.else-branch.c
            - match: (?=^\s*#\s*endif\b)
              pop: true
            - include: preprocessor-disabled
        - match: ""
          push:
            - match: (?=^\s*#\s*(else|endif)\b)
              pop: true
            - include: preprocessor-global
            - include: negated-block
            - include: global

  preprocessor-rule-other-global:
    - match: ^\s*(#\s*(?:if|ifdef|ifndef))\b
      captures:
        1: keyword.control.import.c
      push:
        - meta_scope: meta.preprocessor.c
        - include: preprocessor-line-continuation
        - include: preprocessor-comments
        - match: \bdefined\b
          scope: keyword.control.c
        # Enter a new scope where all elif/else branches have their
        # contexts popped by a subsequent elif/else/endif. This ensures that
        # preprocessor branches don't push multiple meta.block scopes on
        # the stack, thus messing up the "global" context's detection of
        # functions.
        - match: $\n
          set: preprocessor-if-branch-global

  # These gymnastics here ensure that we are properly handling scope even
  # when the preprocessor is used to create different scope beginnings, such
  # as a different if/while condition
  preprocessor-if-branch-global:
    - match: ^\s*(#\s*endif)\b
      captures:
        1: meta.preprocessor.c keyword.control.import.c
      pop: true
    - match: (?=^\s*#\s*(elif|else)\b)
      push: preprocessor-elif-else-branch-global
    - match: \{
      scope: punctuation.section.block.begin.c
      set: preprocessor-block-if-branch-global
    - include: preprocessor-global
    - include: negated-block
    - include: global

  preprocessor-block-if-branch-global:
    - meta_scope: meta.block.c
    - match: ^\s*(#\s*endif)\b
      captures:
        1: meta.preprocessor.c keyword.control.import.c
      set: preprocessor-block-finish-global
    - match: (?=^\s*#\s*(elif|else)\b)
      push: preprocessor-elif-else-branch-global
    - match: \}
      scope: punctuation.section.block.end.c
      set: preprocessor-if-branch-global
    - include: statements

  preprocessor-block-finish-global:
    - meta_scope: meta.block.c
    - match: ^\s*(#\s*(?:if|ifdef|ifndef))\b
      captures:
        1: meta.preprocessor.c keyword.control.import.c
      set: preprocessor-block-finish-if-branch-global
    - match: \}
      scope: punctuation.section.block.end.c
      pop: true
    - include: statements

  preprocessor-block-finish-if-branch-global:
    - match: ^\s*(#\s*endif)\b
      captures:
        1: meta.preprocessor.c keyword.control.import.c
      pop: true
    - match: \}
      scope: punctuation.section.block.end.c
      set: preprocessor-if-branch-global
    - include: statements

  preprocessor-elif-else-branch-global:
    - match: (?=^\s*#\s*endif\b)
      pop: true
    - include: negated-block
    - include: preprocessor-global
    - include: global

  ## Preprocessor for statements

  preprocessor-rule-disabled-statements:
    - match: ^\s*((#if)\s+(0))\b
      captures:
        1: meta.preprocessor.c
        2: keyword.control.import.c
        3: constant.numeric.preprocessor.c
      push:
        - match: ^\s*(#\s*endif)\b
          captures:
            1: meta.preprocessor.c keyword.control.import.c
          pop: true
        - match: ^\s*(#\s*else)\b
          captures:
            1: meta.preprocessor.c keyword.control.import.else.c
          push:
            - match: (?=^\s*#\s*endif\b)
              pop: true
            - include: negated-block
            - include: statements
        - match: ""
          push:
            - meta_scope: comment.block.preprocessor.if-branch.c
            - match: (?=^\s*#\s*(else|endif)\b)
              pop: true
            - include: preprocessor-disabled

  preprocessor-rule-enabled-statements:
    - match: ^\s*((#if)\s+(0*1))\b
      captures:
        1: meta.preprocessor.c
        2: keyword.control.import.c
        3: constant.numeric.preprocessor.c
      push:
        - match: ^\s*(#\s*endif)\b
          captures:
            1: meta.preprocessor.c keyword.control.import.c
          pop: true
        - match: ^\s*(#\s*else)\b
          captures:
            1: meta.preprocessor.c keyword.control.import.else.c
          push:
            - meta_content_scope: comment.block.preprocessor.else-branch.c
            - match: (?=^\s*#\s*endif\b)
              pop: true
            - include: preprocessor-disabled
        - match: ""
          push:
            - match: (?=^\s*#\s*(else|endif)\b)
              pop: true
            - include: negated-block
            - include: statements

  preprocessor-rule-other-statements:
    - match: ^\s*(#\s*(?:if|ifdef|ifndef))\b
      captures:
        1: keyword.control.import.c
      push:
        - meta_scope: meta.preprocessor.c
        - include: preprocessor-line-continuation
        - include: preprocessor-comments
        - match: \bdefined\b
          scope: keyword.control.c
        # Enter a new scope where all elif/else branches have their
        # contexts popped by a subsequent elif/else/endif. This ensures that
        # preprocessor branches don't push multiple meta.block scopes on
        # the stack, thus messing up the "global" context's detection of
        # functions.
        - match: $\n
          set: preprocessor-if-branch-statements

  # These gymnastics here ensure that we are properly handling scope even
  # when the preprocessor is used to create different scope beginnings, such
  # as a different if/while condition
  preprocessor-if-branch-statements:
    - match: ^\s*(#\s*endif)\b
      captures:
        1: meta.preprocessor.c keyword.control.import.c
      pop: true
    - match: (?=^\s*#\s*(elif|else)\b)
      push: preprocessor-elif-else-branch-statements
    - match: \{
      scope: punctuation.section.block.begin.c
      set: preprocessor-block-if-branch-statements
    - include: negated-block
    - include: statements

  preprocessor-block-if-branch-statements:
    - meta_scope: meta.block.c
    - match: ^\s*(#\s*endif)\b
      captures:
        1: meta.preprocessor.c keyword.control.import.c
      set: preprocessor-block-finish-statements
    - match: (?=^\s*#\s*(elif|else)\b)
      push: preprocessor-elif-else-branch-statements
    - match: \}
      scope: punctuation.section.block.end.c
      set: preprocessor-if-branch-statements
    - include: statements

  preprocessor-block-finish-statements:
    - meta_scope: meta.block.c
    - match: ^\s*(#\s*(?:if|ifdef|ifndef))\b
      captures:
        1: meta.preprocessor.c keyword.control.import.c
      set: preprocessor-block-finish-if-branch-statements
    - match: \}
      scope: punctuation.section.block.end.c
      pop: true
    - include: statements

  preprocessor-block-finish-if-branch-statements:
    - match: ^\s*(#\s*endif)\b
      captures:
        1: meta.preprocessor.c keyword.control.import.c
      pop: true
    - match: \}
      scope: punctuation.section.block.end.c
      set: preprocessor-if-branch-statements
    - include: statements

  preprocessor-elif-else-branch-statements:
    - match: (?=^\s*#\s*endif\b)
      pop: true
    - include: negated-block
    - include: statements

  ## Preprocessor other

  negated-block:
    - match: '\}'
      scope: punctuation.section.block.end.c
      push:
        - match: '\{'
          scope: punctuation.section.block.begin.c
          pop: true
        - match: (?=^\s*#\s*(elif|else|endif)\b)
          pop: true
        - include: statements

  preprocessor-macro-define:
    - match: ^\s*(#\s*define)\b
      captures:
        1: meta.preprocessor.macro.c keyword.control.import.define.c
      push:
        - meta_content_scope: meta.preprocessor.macro.c
        - include: preprocessor-line-continuation
        - include: preprocessor-line-ending
        - include: preprocessor-comments
        - match: '({{identifier}})(?=\()'
          scope: entity.name.function.preprocessor.c
          set:
            - match: '\('
              scope: punctuation.section.group.begin.c
              set: preprocessor-macro-params
        - match: '{{identifier}}'
          scope: entity.name.constant.preprocessor.c
          set: preprocessor-macro-definition

  preprocessor-macro-params:
    - meta_scope: meta.preprocessor.macro.parameters.c meta.group.c
    - match: '{{identifier}}'
      scope: variable.parameter.c
    - match: \)
      scope: punctuation.section.group.end.c
      set: preprocessor-macro-definition
    - match: ','
      scope: punctuation.separator.c
      push:
        - match: '{{identifier}}'
          scope: variable.parameter.c
          pop: true
        - include: preprocessor-line-continuation
        - include: preprocessor-comments
        - match: '\.\.\.'
          scope: keyword.operator.variadic.c
        - match: '(?=\))'
          pop: true
        - match: (/\*).*(\*/)
          scope: comment.block.c
          captures:
            1: punctuation.definition.comment.c
            2: punctuation.definition.comment.c
        - match: '\S+'
          scope: invalid.illegal.unexpected-character.c
    - include: preprocessor-line-continuation
    - include: preprocessor-comments
    - match: '\.\.\.'
      scope: keyword.operator.variadic.c
    - match: (/\*).*(\*/)
      scope: comment.block.c
      captures:
        1: punctuation.definition.comment.c
        2: punctuation.definition.comment.c
    - match: $\n
      scope: invalid.illegal.unexpected-end-of-line.c

  preprocessor-macro-definition:
    - meta_content_scope: meta.preprocessor.macro.c
    - include: preprocessor-line-continuation
    - include: preprocessor-line-ending
    - include: preprocessor-comments
    # Don't define blocks in define statements
    - match: '\{'
      scope: punctuation.section.block.begin.c
    - match: '\}'
      scope: punctuation.section.block.end.c
    - include: expressions

  preprocessor-other:
    - match: ^\s*(#\s*(?:if|ifdef|ifndef|elif|else|line|pragma|undef))\b
      captures:
        1: keyword.control.import.c
      push:
        - meta_scope: meta.preprocessor.c
        - include: preprocessor-line-continuation
        - include: preprocessor-line-ending
        - include: preprocessor-comments
        - match: \bdefined\b
          scope: keyword.control.c
    - match: ^\s*(#\s*endif)\b
      captures:
        1: meta.preprocessor.c keyword.control.import.c
    - match: ^\s*(#\s*(?:error|warning))\b
      captures:
        1: keyword.control.import.error.c
      push:
        - meta_scope: meta.preprocessor.diagnostic.c
        - include: preprocessor-line-continuation
        - include: preprocessor-line-ending
        - include: preprocessor-comments
        - include: strings
        - match: '\S+'
          scope: string.unquoted.c
    - match: ^\s*(#\s*(?:include|import))\b\s+
      captures:
        1: keyword.control.import.include.c
      push:
        - meta_scope: meta.preprocessor.include.c
        - include: preprocessor-line-continuation
        - include: preprocessor-line-ending
        - include: preprocessor-comments
        - match: '"'
          scope: punctuation.definition.string.begin.c
          push:
            - meta_scope: string.quoted.double.include.c
            - match: '"'
              scope: punctuation.definition.string.end.c
              pop: true
        - match: <
          scope: punctuation.definition.string.begin.c
          push:
            - meta_scope: string.quoted.other.lt-gt.include.c
            - match: ">"
              scope: punctuation.definition.string.end.c
              pop: true
